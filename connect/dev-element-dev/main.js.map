{"version":3,"file":"main.js","mappings":"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","sources":["./projects/fasten-connect-stitch-element/src/app/app.component.ts","./projects/fasten-connect-stitch-element/src/app/app.component.html","./projects/fasten-connect-stitch-element/src/app/app.module.ts","./projects/fasten-connect-stitch-element/src/environments/environment.ts","./projects/fasten-connect-stitch-element/src/main.ts"],"sourcesContent":["import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {environment} from '../environments/environment';\nimport {HttpParams} from '@angular/common/http';\n\n@Component({\n  selector: 'fasten-stitch-element',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None //default is  ViewEncapsulation.Emulated\n})\nexport class AppComponent implements OnInit{\n  @Input('public-id') publicId = ''; //validate\n  @Input('external-id') externalId = ''; //validate\n  @Input('reconnect-org-connection-id') reconnectOrgConnectionId: string | null = null;\n  @Input('anonymous-vault-profile') anonymousVaultProfile: boolean | null = false;\n  @Input('static-backdrop') staticBackdrop: boolean | null = false;\n\n  @Output('messageBusCallback') messageBusCallback = new EventEmitter<any>()\n\n  @ViewChild('stitchModalButton', { static: false }) public stitchModalButton: ElementRef;\n  @ViewChild('stitchModal', { static: false }) public stitchModal: ElementRef<HTMLDialogElement>;\n  @ViewChild('stitchIframeEmbed', { static: false }) public stitchIframeEmbed: ElementRef<HTMLIFrameElement>;\n\n  constructor(\n    private host: ElementRef,\n  ) {\n\n    //https://stackoverflow.com/a/69173549/1157633\n    this.host.nativeElement.show = this.showStitchModalExt.bind(this);\n    this.host.nativeElement.hide = this.hideStitchModalExt.bind(this);\n  }\n\n  ngOnInit(): void {\n    window.addEventListener('message', (event) => {\n      if(event.origin !== 'http://localhost:4201'){\n        console.error(\"Message received from invalid origin\", event.origin);\n        return;\n      }\n      const responseElement = document.getElementById('response');\n      if(responseElement){\n        responseElement.innerHTML = \"Hello \" + event.data.text + \" \" + event.data.number;\n      }\n      console.log(event.data);\n    }, false);\n  }\n\n  // buttonClick(): void {\n  //   console.log(\"button clicked...updating iframe\");\n  //   const frames = this.stitchModal.nativeElement.getElementsByTagName(\"iframe\");\n  //   if(frames.length > 0) {\n  //     const frame = frames[0];\n  //     const text = (Math.random() + 1).toString(36).substring(7);\n  //     frame.src = `http://localhost:4201?text=${text}`;\n  //     this.sendMessageToFrame(frame, \"Hello\");\n  //\n  //     const btnText = document.getElementById(\"button-text\");\n  //     if(btnText){\n  //       btnText.innerHTML = `Expected display text in iFrame: Hello ${text}`;\n  //     }\n  //   }\n  // }\n  //\n  // sendMessageToFrame(frame: HTMLIFrameElement, message: string): void {\n  //   frame.contentWindow?.postMessage(message, \"http://localhost:4201\");\n  // }\n\n  //the element options must be encoded as query string parameters and then appended to the iframe src\n  encodeOptionsAsQueryStringParameters(): string {\n\n  // @Input('public-id') publicId = ''; //validate\n  // @Input('external-id') externalId = ''; //validate\n  // @Input('reconnect-org-connection-id') reconnectOrgConnectionId: string | null = null;\n  // @Input('anonymous-vault-profile') anonymousVaultProfile: boolean | null = false;\n  // @Input('static-backdrop') staticBackdrop: boolean | null = false;\n\n\n    let params = new HttpParams()\n    if(this.publicId) {\n      params = params.set('public-id', this.publicId)\n    }\n    if(this.externalId) {\n      params = params.set('external-id', this.externalId)\n    }\n    if(this.reconnectOrgConnectionId) {\n      params = params.set('reconnect-org-connection-id', this.reconnectOrgConnectionId)\n    }\n    if(this.anonymousVaultProfile) {\n      params = params.set('anonymous-vault-profile', this.anonymousVaultProfile.toString())\n    }\n    if(this.staticBackdrop) {\n      params = params.set('static-backdrop', this.staticBackdrop.toString())\n    }\n    return params.toString()\n  }\n\n  showStitchModal(): void {\n\n    this.stitchIframeEmbed.nativeElement.src = environment.embed_endpoint_base + \"?\" + this.encodeOptionsAsQueryStringParameters()\n\n    this.stitchModal.nativeElement.showModal()\n    this.registerDialogCloseOnBackdropClick()\n\n    // const frames = this.stitchModal.nativeElement.getElementsByTagName(\"iframe\");\n    // if(frames.length > 0){\n    //   const frame = frames[0];\n    //   if(frame){\n    //     //This fails because secure.example.net is not the origin of the iframe\n    //     frame.contentWindow?.postMessage(\"The user is 'bob' and the password is 'secret'\", \"https://secure.example.net\");\n    //     //This works because example.net is the origin of the iframe\n    //     this.sendMessageToFrame(frame, \"Hello\");\n    //   }\n    // }\n  }\n\n  // these functions can be called externally to show/hide the widget via javascript\n  showStitchModalExt(): void {\n    this.showStitchModal()\n  }\n\n  hideStitchModalExt(): void {\n    this.stitchModal.nativeElement.close();\n  }\n\n  //event handler for backdrop click\n  registerDialogCloseOnBackdropClick() {\n    this.stitchModal.nativeElement.addEventListener('click', (event) => {\n      var rect = this.stitchModal.nativeElement.getBoundingClientRect();\n      var isInDialog = (rect.top <= event.clientY && event.clientY <= rect.top + rect.height &&\n        rect.left <= event.clientX && event.clientX <= rect.left + rect.width);\n      if (!isInDialog) {\n        this.stitchModal.nativeElement.close();\n      }\n    });\n  }\n}\n","<!-- Modal toggle -->\n<button #stitchModalButton (click)=\"showStitchModal()\" class=\"block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\" type=\"button\">\n  <div #ref><ng-content></ng-content></div>\n  <span *ngIf=\"!ref.hasChildNodes()\">\n    Share Records\n </span>\n</button>\n\n<!--<div class=\"p-4\">-->\n<!--  <h3>IFrame Responses</h3>-->\n<!--  <div id=\"response\" class=\"text-center text-sm text-gray-500\"></div>-->\n<!--</div>-->\n<!--<div class=\"p-4\">-->\n<!--  <h3>IFrame Controls</h3>-->\n<!--  <button (click)=\"buttonClick()\">Update Iframe With Query Param</button> <span id=\"button-text\"></span>-->\n<!--</div>-->\n\n<!--<div style=\"padding-top:5rem\">-->\n<!--  <button (click)=\"openPopup()\">Open Popup</button>-->\n<!--</div>-->\n\n<!-- Main modal -->\n<dialog #stitchModal id=\"stitchModal\" tabindex=\"-1\" aria-hidden=\"true\" class=\"border-none p-0 backdrop:backdrop-blur w-full max-w-[440px] min-h-[600px] bg-white rounded-lg shadow-lg\">\n  <iframe class=\"border-none\" #stitchIframeEmbed src=\"https://embed.connect-dev.fastenhealth.com\" style=\"width:100%; min-height:500px;\"></iframe>\n</dialog>\n","import {Injector, NgModule} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { createCustomElement } from '@angular/elements';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  entryComponents: [AppComponent]\n})\nexport class AppModule {\n  constructor(injector: Injector) {\n    const el = createCustomElement(AppComponent, { injector });\n    customElements.define('fasten-stitch-element', el);\n  }\n\n  ngDoBootstrap() {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  name: \"local\",\n\n  embed_endpoint_base: 'https://localhost:4201',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.name != 'local') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}