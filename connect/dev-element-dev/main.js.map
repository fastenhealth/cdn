{"version":3,"file":"main.js","mappings":"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","sources":["./projects/fasten-connect-stitch-element/src/app/app.component.ts","./projects/fasten-connect-stitch-element/src/app/app.component.html","./projects/fasten-connect-stitch-element/src/app/app.module.ts","./projects/fasten-connect-stitch-element/src/environments/environment.ts","./projects/fasten-connect-stitch-element/src/main.ts"],"sourcesContent":["import {Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'fasten-stitch',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None //default is  ViewEncapsulation.Emulated\n})\nexport class AppComponent implements OnInit{\n  title = 'fasten-stitch-app';\n\n  @Input('static-backdrop') staticBackdrop: boolean | null = false;\n\n  @ViewChild('stitchModalButton', { static: false }) public stitchModalButton: ElementRef;\n  @ViewChild('stitchModal', { static: false }) public stitchModal: ElementRef<HTMLDialogElement>;\n\n  constructor(\n    private host: ElementRef,\n    // public messageBus: MessageBusService,\n  ) {\n\n    //https://stackoverflow.com/a/69173549/1157633\n    this.host.nativeElement.show = this.showStitchModalExt.bind(this);\n    this.host.nativeElement.hide = this.hideStitchModalExt.bind(this);\n  }\n\n  ngOnInit(): void {\n    window.addEventListener('message', (event) => {\n      if(event.origin !== 'http://localhost:4201'){\n        console.error(\"Message received from invalid origin\", event.origin);\n        return;\n      }\n      const responseElement = document.getElementById('response');\n      if(responseElement){\n        responseElement.innerHTML = \"Hello \" + event.data.text + \" \" + event.data.number;\n      }\n      console.log(event.data);\n    }, false);\n  }\n\n  buttonClick(): void {\n    console.log(\"button clicked...updating iframe\");\n    const frames = this.stitchModal.nativeElement.getElementsByTagName(\"iframe\");\n    if(frames.length > 0) {\n      const frame = frames[0];\n      const text = (Math.random() + 1).toString(36).substring(7);\n      frame.src = `http://localhost:4201?text=${text}`;\n      this.sendMessageToFrame(frame, \"Hello\");\n\n      const btnText = document.getElementById(\"button-text\");\n      if(btnText){\n        btnText.innerHTML = `Expected display text in iFrame: Hello ${text}`;\n      }\n    }\n  }\n\n  sendMessageToFrame(frame: HTMLIFrameElement, message: string): void {\n    frame.contentWindow?.postMessage(message, \"http://localhost:4201\");\n  }\n\n  showStitchModal(): void {\n    this.stitchModal.nativeElement.showModal()\n    this.registerDialogCloseOnBackdropClick()\n\n    const frames = this.stitchModal.nativeElement.getElementsByTagName(\"iframe\");\n    if(frames.length > 0){\n      const frame = frames[0];\n      if(frame){\n        //This fails because secure.example.net is not the origin of the iframe\n        frame.contentWindow?.postMessage(\"The user is 'bob' and the password is 'secret'\", \"https://secure.example.net\");\n        //This works because example.net is the origin of the iframe\n        this.sendMessageToFrame(frame, \"Hello\");\n      }\n    }\n  }\n\n  // these functions can be called externally to show/hide the widget via javascript\n  showStitchModalExt(): void {\n    this.showStitchModal()\n  }\n\n  hideStitchModalExt(): void {\n    this.stitchModal.nativeElement.close();\n    const frames = this.stitchModal.nativeElement.getElementsByTagName(\"iframe\");\n    if(frames.length > 0){\n      const frame = frames[0];\n      if(frame) {\n        this.sendMessageToFrame(frame, \"stop\");\n        const responseElement = document.getElementById('response');\n        if(responseElement){\n          responseElement.innerHTML = \"Stopped\";\n        }\n      }\n    }\n  }\n\n  //event handler for backdrop click\n  registerDialogCloseOnBackdropClick() {\n    this.stitchModal.nativeElement.addEventListener('click', (event) => {\n      var rect = this.stitchModal.nativeElement.getBoundingClientRect();\n      var isInDialog = (rect.top <= event.clientY && event.clientY <= rect.top + rect.height &&\n        rect.left <= event.clientX && event.clientX <= rect.left + rect.width);\n      if (!isInDialog) {\n        this.hideStitchModalExt();\n      }\n    });\n  }\n\n  openPopup(): void {\n    const popup = window.open(\"https://google.ca\", \"Google\", \"width=600,height=400\");\n\n    // This is the only way to check if a popup has closed that is from a domain you don't control. Otherwise, you would have the popup iteself send a message indicating it is closed.\n    if(popup){\n      popup.addEventListener('load', () => {\n        popup.addEventListener('unload', () => {\n          alert('closed');\n        });\n      });\n    }\n  }\n}\n","<!-- Modal toggle -->\n<button #stitchModalButton (click)=\"showStitchModal()\" class=\"block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\" type=\"button\">\n  <div #ref><ng-content></ng-content></div>\n  <span *ngIf=\"!ref.hasChildNodes()\">\n    Share Records\n </span>\n</button>\n\n<!--<div class=\"p-4\">-->\n<!--  <h3>IFrame Responses</h3>-->\n<!--  <div id=\"response\" class=\"text-center text-sm text-gray-500\"></div>-->\n<!--</div>-->\n<!--<div class=\"p-4\">-->\n<!--  <h3>IFrame Controls</h3>-->\n<!--  <button (click)=\"buttonClick()\">Update Iframe With Query Param</button> <span id=\"button-text\"></span>-->\n<!--</div>-->\n\n<!--<div style=\"padding-top:5rem\">-->\n<!--  <button (click)=\"openPopup()\">Open Popup</button>-->\n<!--</div>-->\n\n<!-- Main modal -->\n<dialog #stitchModal id=\"stitchModal\" tabindex=\"-1\" aria-hidden=\"true\" class=\"border-none p-0 backdrop:backdrop-blur w-full max-w-[440px] min-h-[600px] bg-white rounded-lg shadow-lg\">\n  <iframe class=\"border-none\" #stitchIframeEmbed src=\"https://embed.connect-dev.fastenhealth.com\" style=\"width:100%; min-height:500px;\"></iframe>\n</dialog>\n","import {Injector, NgModule} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { createCustomElement } from '@angular/elements';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  entryComponents: [AppComponent]\n})\nexport class AppModule {\n  constructor(injector: Injector) {\n    const el = createCustomElement(AppComponent, { injector });\n    customElements.define('fasten-stitch', el);\n  }\n\n  ngDoBootstrap() {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}