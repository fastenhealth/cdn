{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.constants.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/auth-guards/is-authenticated-auth-guard.ts","./src/app/components/spinner/spinner.component.ts","./src/app/components/spinner/spinner.component.html","./src/app/directives/image-fallback.directive.ts","./src/app/fasten-stitch/fasten-stitch.component.ts","./src/app/fasten-stitch/fasten-stitch.component.html","./src/app/models/event-payload.ts","./src/app/models/fasten/vaultProfile.ts","./src/app/models/forms/form-health-system-request.ts","./src/app/models/forms/form-support-request.ts","./src/app/models/search-filter.ts","./src/app/models/vault-config.ts","./src/app/pages/complete/complete.component.ts","./src/app/pages/complete/complete.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/form-health-system-request/form-health-system-request.component.ts","./src/app/pages/form-health-system-request/form-health-system-request.component.html","./src/app/pages/form-support-request/form-support-request.component.ts","./src/app/pages/form-support-request/form-support-request.component.html","./src/app/pages/health-system-brand-details/health-system-brand-details.component.ts","./src/app/pages/health-system-brand-details/health-system-brand-details.component.html","./src/app/pages/health-system-connecting/health-system-connecting.component.ts","./src/app/pages/health-system-connecting/health-system-connecting.component.html","./src/app/pages/health-system-search/health-system-search.component.ts","./src/app/pages/health-system-search/health-system-search.component.html","./src/app/pages/identity-verification/identity-verification.component.ts","./src/app/pages/identity-verification/identity-verification.component.html","./src/app/pages/vault-profile-signin-code/vault-profile-signin-code.component.ts","./src/app/pages/vault-profile-signin-code/vault-profile-signin-code.component.html","./src/app/pages/vault-profile-signin/vault-profile-signin.component.ts","./src/app/pages/vault-profile-signin/vault-profile-signin.component.html","./src/app/pipes/safe-html.pipe.ts","./src/app/pipes/state-name.pipe.ts","./src/app/router/nav-outlet/nav-outlet-link.directive.ts","./src/app/router/nav-outlet/nav-outlet.component.ts","./src/app/router/nav-outlet/nav-outlet.component.html","./src/app/router/nav-outlet/nav-outlet.directive.ts","./src/app/router/nav-outlet/nav-outlet.service.ts","./src/app/services/auth-interceptor.service.ts","./src/app/services/auth.service.ts","./src/app/services/config.service.ts","./src/app/services/message-bus.service.ts","./src/app/services/vault.service.ts","./src/app/utils/connect-helper.ts","./src/environments/environment.dev.ts","./src/main.ts"],"sourcesContent":["export enum ApiMode {\n  Live = \"live\",\n  Test = \"test\",\n}\n\nexport enum ConnectionStatus {\n  Authorized = \"authorized\",\n  Revoked = \"revoked\"\n}\n\nexport enum ConnectMode {\n  Redirect = \"redirect\",\n  Popup = \"popup\",\n}\n\n//where possible, these events should\nexport enum EventTypes {\n  EventTypeWidgetComplete = \"widget.complete\",\n\n  EventTypeConnectionPending = \"patient.connection_pending\",\n  EventTypeConnectionSuccess = \"patient.connection_success\",\n  EventTypeConnectionFailed = \"patient.connection_failed\",\n}\n\nexport const ConnectWindowTimeout = 24*5000 //wait 2 minutes (5 * 24 = 120)\n","import { NgModule, Injector } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport { createCustomElement } from '@angular/elements';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {InfiniteScrollModule} from 'ngx-infinite-scroll';\nimport { CodeInputModule } from 'angular-code-input';\n\nimport {ImageFallbackDirective} from './directives/image-fallback.directive';\nimport {NavOutletComponent} from './router/nav-outlet/nav-outlet.component';\nimport {NavOutletDirective} from './router/nav-outlet/nav-outlet.directive';\nimport {NavOutletLinkDirective} from './router/nav-outlet/nav-outlet-link.directive';\n\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\nimport { SpinnerComponent } from './components/spinner/spinner.component';\n\nimport { FastenStitchComponent } from './fasten-stitch/fasten-stitch.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { VaultProfileSigninComponent } from './pages/vault-profile-signin/vault-profile-signin.component';\nimport { VaultProfileSigninCodeComponent } from './pages/vault-profile-signin-code/vault-profile-signin-code.component';\nimport { IdentityVerificationComponent } from './pages/identity-verification/identity-verification.component';\nimport { HealthSystemSearchComponent } from './pages/health-system-search/health-system-search.component';\nimport { HealthSystemBrandDetailsComponent } from './pages/health-system-brand-details/health-system-brand-details.component';\nimport { FormHealthSystemRequestComponent } from './pages/form-health-system-request/form-health-system-request.component';\nimport { FormSupportRequestComponent } from './pages/form-support-request/form-support-request.component';\nimport { HealthSystemConnectingComponent } from './pages/health-system-connecting/health-system-connecting.component';\nimport { CompleteComponent } from './pages/complete/complete.component';\nimport {NavOutletService} from './router/nav-outlet/nav-outlet.service';\nimport {AuthInterceptorService} from './services/auth-interceptor.service';\nimport {AuthService} from './services/auth.service';\nimport { StateNamePipe } from './pipes/state-name.pipe';\n\n\n@NgModule({\n  declarations: [\n    FastenStitchComponent,\n    DashboardComponent,\n    VaultProfileSigninComponent,\n    VaultProfileSigninCodeComponent,\n    IdentityVerificationComponent,\n    HealthSystemSearchComponent,\n    HealthSystemBrandDetailsComponent,\n    FormHealthSystemRequestComponent,\n    FormSupportRequestComponent,\n    HealthSystemConnectingComponent,\n    CompleteComponent,\n\n    ImageFallbackDirective,\n    NavOutletComponent,\n    NavOutletDirective,\n    NavOutletLinkDirective,\n    SafeHtmlPipe,\n    SpinnerComponent,\n    StateNamePipe,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    InfiniteScrollModule,\n    CodeInputModule,\n  ],\n  // providers: [NavOutletService],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n      // deps: [AuthService, NavOutletService]\n      // deps: [AuthService, NavOutletService]\n    },\n  ],\n  entryComponents: [FastenStitchComponent]\n})\nexport class AppModule {\n  constructor(injector: Injector) {\n    const el = createCustomElement(FastenStitchComponent, { injector });\n    customElements.define('fasten-stitch', el);\n  }\n\n  ngDoBootstrap() {}\n}\n","import { Type} from '@angular/core';\nimport {VaultProfileSigninComponent} from './pages/vault-profile-signin/vault-profile-signin.component';\nimport {VaultProfileSigninCodeComponent} from './pages/vault-profile-signin-code/vault-profile-signin-code.component';\nimport {IdentityVerificationComponent} from './pages/identity-verification/identity-verification.component';\nimport {\n  FormHealthSystemRequestComponent\n} from './pages/form-health-system-request/form-health-system-request.component';\nimport {FormSupportRequestComponent} from './pages/form-support-request/form-support-request.component';\nimport {HealthSystemSearchComponent} from './pages/health-system-search/health-system-search.component';\nimport {\n  HealthSystemBrandDetailsComponent\n} from './pages/health-system-brand-details/health-system-brand-details.component';\nimport {HealthSystemConnectingComponent} from './pages/health-system-connecting/health-system-connecting.component';\nimport {CompleteComponent} from './pages/complete/complete.component';\nimport {NavOutletPage} from './models/nav-outlet-page';\nimport {DashboardComponent} from './pages/dashboard/dashboard.component';\nimport {IsAuthenticatedAuthGuard} from './auth-guards/is-authenticated-auth-guard';\nimport {AuthService} from './services/auth.service';\nimport {NavOutletService} from './router/nav-outlet/nav-outlet.service';\n\nexport enum NavOutletPageName {\n  Default = \"\",\n\n  VaultProfileSignin = \"vault-profile-signin\",\n  VaultProfileSigninCode = \"vault-profile-signin-code\",\n  IdentityVerification = \"identity-verification\",\n\n  Dashboard = \"dashboard\",\n  FormHealthSystemRequest = \"form-health-system-request\",\n  FormSupportRequest = \"form-support-request\",\n\n  HealthSystemSearch = \"health-system-search\",\n  HealthSystemBrandDetails = \"health-system-brand-details\",\n  HealthSystemConnecting = \"health-system-connecting\",\n  CompleteSummary = \"complete\",\n}\n\nexport interface NavOutletCanActivate {\n  (nextRoute: NavOutletRoute): Promise <boolean>\n}\nexport class NavOutletRoute {\n  page: string = NavOutletPageName.Dashboard\n  component: Type<NavOutletPage> = null\n  inputs?: Map<string, any>\n  canActivate?: NavOutletCanActivate\n}\n\nexport const Routes: NavOutletRoute[] = [\n  //on empty, this is where we go\n  { page: NavOutletPageName.Default, component: VaultProfileSigninComponent },\n  // { page: NavOutletPageName.Default, component: HealthSystemSearchComponent },\n\n  { page: NavOutletPageName.VaultProfileSignin, component: VaultProfileSigninComponent },\n  { page: NavOutletPageName.VaultProfileSigninCode, component: VaultProfileSigninCodeComponent },\n  { page: NavOutletPageName.IdentityVerification, component: IdentityVerificationComponent, canActivate: IsAuthenticatedAuthGuard },\n\n  { page: NavOutletPageName.Dashboard, component: DashboardComponent, canActivate: IsAuthenticatedAuthGuard },\n  { page: NavOutletPageName.HealthSystemSearch, component: HealthSystemSearchComponent, canActivate: IsAuthenticatedAuthGuard },\n  { page: NavOutletPageName.HealthSystemBrandDetails, component: HealthSystemBrandDetailsComponent, canActivate: IsAuthenticatedAuthGuard },\n\n  //cannot be authenticated, must be publically accessible for reconnecting\n  { page: NavOutletPageName.HealthSystemConnecting, component: HealthSystemConnectingComponent },\n  { page: NavOutletPageName.CompleteSummary, component: CompleteComponent },\n  { page: NavOutletPageName.FormHealthSystemRequest, component: FormHealthSystemRequestComponent },\n  { page: NavOutletPageName.FormSupportRequest, component: FormSupportRequestComponent },\n]\n","import {inject, Injectable} from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {NavOutletPageName, NavOutletCanActivate, NavOutletRoute} from '../app.routing';\nimport {NavOutletLinkDirective} from '../router/nav-outlet/nav-outlet-link.directive';\nimport {NavOutletService} from '../router/nav-outlet/nav-outlet.service';\nimport {ConfigService} from '../services/config.service';\n\nexport function IsAuthenticatedAuthGuard(nextRoute: NavOutletRoute): Promise <boolean> {\n  const authService = inject(AuthService);\n  const navOutletService = inject(NavOutletService);\n  const configService = inject(ConfigService);\n\n  if(configService.systemConfig$.anonymousVaultProfile){\n    return Promise.resolve(true) //skip auth check\n  }\n\n  return authService.GetJWTPayload()\n      .then(jwtPayload => {\n        //check if the user is authenticated, if not, redirect to login\n        if (!jwtPayload) {\n          if (nextRoute.page === NavOutletPageName.VaultProfileSignin) {\n            return true\n          } else {\n            console.log(\"User is not authenticated, redirecting to login page\")\n            navOutletService.navigateByUrl(NavOutletPageName.VaultProfileSignin);\n            return false\n          }\n        } else if(!jwtPayload.has_verified_identity){\n          if(nextRoute.page === NavOutletPageName.IdentityVerification){\n            return true\n          } else {\n            console.log(\"Profile does not have a verified identity, redirecting to id verification step\", jwtPayload)\n            navOutletService.navigateByUrl(NavOutletPageName.IdentityVerification);\n            return false\n          }\n        }\n        // continue as normal\n        return true\n      })\n      .catch(err => {\n        console.error(\"Error checking if user is authenticated\", err)\n        navOutletService.navigateByUrl(NavOutletPageName.VaultProfileSignin);\n        return false\n      })\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg class=\"mr-2 h-5 w-5 animate-spin text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n</svg>\n","import {Directive, ElementRef, HostListener, Input} from '@angular/core';\n\nconst DEFAULT_IMAGE_FALLBACK_PATH: string = 'https://cdn.fastenhealth.com/images/no-image.svg';\n\n@Directive({\n  selector: 'img[imageFallback]'\n})\nexport class ImageFallbackDirective {\n  @Input() imageFallback?: string;\n  constructor(private elementRef: ElementRef) {}\n\n  hospitalInlineImage = \"data:image/svg+xml,%3csvg id='connecting-system-logo-placeholder' xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='text-gray-400'%3e%3cpath d='M12 6v4'/%3e%3cpath d='M14 14h-4'/%3e%3cpath d='M14 18h-4'/%3e%3cpath d='M14 8h-4'/%3e%3cpath d='M18 12h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h2'/%3e%3cpath d='M18 22V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v18'/%3e%3c/svg%3e\"\n  officeInlineImage = \"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='lucide lucide-building-2 w-10 h-10 text-gray-400'%3e%3cpath d='M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z'/%3e%3cpath d='M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2'/%3e%3cpath d='M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2'/%3e%3cpath d='M10 6h4'/%3e%3cpath d='M10 10h4'/%3e%3cpath d='M10 14h4'/%3e%3cpath d='M10 18h4'/%3e%3c/svg%3e\"\n  fastenSquareInlineImage = \"data:image/svg+xml,%3csvg version='1.2' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1640 1640' width='1640' height='1640'%3e%3ctitle%3esquare%3c/title%3e%3cstyle%3etspan %7b white-space:pre %7d .s0 %7b fill: white %7d .t1 %7b font-size: 400px%3bfill: %235b47fb%3bfont-weight: 700%3bfont-family: 'Poppins-Bold'%2c 'Poppins' %7d%3c/style%3e%3cpath id='Layer 1' fill-rule='evenodd' class='s0' d='m-90-48h1752v1727h-1752z'/%3e%3ctext id='fasten' style='transform: matrix(1.356%2c0%2c0%2c1.356%2c8.863%2c630.478)'%3e%3ctspan x='0' y='296' class='t1' dx='0'%3ef%3c/tspan%3e%3ctspan y='296' class='t1' dx='0'%3ea%3c/tspan%3e%3ctspan y='296' class='t1' dx='0'%3es%3c/tspan%3e%3ctspan y='296' class='t1' dx='0'%3et%3c/tspan%3e%3ctspan y='296' class='t1' dx='0'%3ee%3c/tspan%3e%3ctspan y='296' class='t1' dx='0 -21'%3en%3c/tspan%3e%3c/text%3e%3c/svg%3e\"\n  fastenLogoInlineImage = \"data:image/svg+xml,%3csvg version='1.2' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1640 1640' width='1640' height='1640'%3e%3ctitle%3esquare%3c/title%3e%3cstyle%3etspan %7b white-space:pre %7d .s0 %7b fill: white %7d .t1 %7b font-size: 282px%3bfill: %235b47fb%3bfont-weight: 700%3bfont-family: 'Poppins-Bold'%2c 'Poppins' %7d%3c/style%3e%3cpath id='Layer 1' fill-rule='evenodd' class='s0' d='m-90-48h1752v1727h-1752z'/%3e%3ctext id='fh' style='transform: matrix(4.298%2c0%2c0%2c4.298%2c252%2c393)'%3e%3ctspan x='0' y='208.4' class='t1' dx='0'%3ef%3c/tspan%3e%3ctspan y='208.4' class='t1' dx='0'%3eh%3c/tspan%3e%3ctspan y='208.4' class='t1' dx='0'%3e%3c/tspan%3e%3c/text%3e%3c/svg%3e\"\n  unknownOrganizationInlineImage = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 40 40' fill='none'%3E%3Crect width='40' height='40' rx='8' fill='currentColor' /%3E%3Cpath d='M20 12V28M12 20H28' stroke='white' stroke-width='3' stroke-linecap='round' stroke-linejoin='round' /%3E%3Cpath d='M12 12L28 28M28 12L12 28' stroke='white' stroke-width='3' stroke-linecap='round' stroke-linejoin='round' opacity='0.2' /%3E%3C/svg%3E\"\n  @HostListener('error')\n  loadFallbackOnError() {\n    // Check to see if we have already tried to load the fallback image.\n    // Avoids endless loop if for some reason fallback image is missing. Just accept the broken image.\n    if (this.path(this.elementRef.nativeElement.src) == this.path(this.fallbackSrc())) {\n      return;\n    }\n\n    this.elementRef.nativeElement.src = this.fallbackSrc();\n  }\n\n  private fallbackSrc(): string {\n    if (this.imageFallback === 'hospital') {\n      return this.hospitalInlineImage;\n    } else if (this.imageFallback === 'office') {\n      return this.officeInlineImage;\n    } else if (this.imageFallback === 'fasten') {\n      return this.fastenSquareInlineImage;\n    } else if (this.imageFallback === 'fasten-logo') {\n      return this.fastenLogoInlineImage;\n    } else if (this.imageFallback == 'unknown-organization') {\n      return this.unknownOrganizationInlineImage\n    } else {\n      return this.imageFallback || DEFAULT_IMAGE_FALLBACK_PATH;\n    }\n  }\n\n  private path(urlString: string): string {\n    // remove http(s) and domain\n    return urlString.replace(/^https?:\\/\\/[^\\/]*/, '');\n  }\n\n\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  AfterViewInit, ViewEncapsulation, OnChanges,\n} from '@angular/core';\nimport {LighthouseBrandListDisplayItem} from '../models/lighthouse/lighthouse-source-search';\nimport {ApiMode} from '../app.constants';\nimport {MessageBusService} from '../services/message-bus.service';\nimport {OrganizationConnectionCallbackEvent} from '../models/organization-connection-callback-event';\nimport { ElementRef, ViewChild } from '@angular/core';\nimport {ConfigService} from '../services/config.service';\nimport {VaultService} from '../services/vault.service';\nimport {Organization} from '../models/fasten/organization';\nimport {NavOutletPageName} from '../app.routing';\nimport {NavOutletService} from '../router/nav-outlet/nav-outlet.service';\nimport {EventPayload} from '../models/event-payload';\n\nexport class SourceListItem {\n  brand: LighthouseBrandListDisplayItem\n  searchHighlights?: string[]\n}\n\n\n@Component({\n  // standalone: true,\n  selector: 'fasten-stitch',\n  templateUrl: './fasten-stitch.component.html',\n  styleUrls: ['./fasten-stitch.component.css'],\n  // SEE https://stackoverflow.com/questions/67115155/angular-web-component-how-to-embed-css-file-into-the-final-js-file\n  // using view encapsulation to namespace CSS.\n  encapsulation: ViewEncapsulation.None //default is  ViewEncapsulation.Emulated\n})\nexport class FastenStitchComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input('public-id') publicId = ''; //validate\n  @Input('external-id') externalId = ''; //validate\n  @Input('reconnect-org-connection-id') reconnectOrgConnectionId: string | null = null;\n  @Input('anonymous-vault-profile') anonymousVaultProfile: boolean | null = false;\n  @Input('static-backdrop') staticBackdrop: boolean | null = false;\n\n  @Output('messageBusCallback') messageBusCallback = new EventEmitter<EventPayload>()\n\n  public errorMessage: string\n\n  @ViewChild('stitchModalButton', { static: false }) public stitchModalButton: ElementRef;\n  @ViewChild('stitchModal', { static: false }) public stitchModal: ElementRef<HTMLDialogElement>;\n\n  // private flowbitStitchModal: Modal = null\n  constructor(\n    private host: ElementRef,\n    public configService: ConfigService,\n    private vaultService: VaultService,\n    private navOutletService: NavOutletService,\n    public messageBus: MessageBusService,\n  ) {\n\n    //https://stackoverflow.com/a/69173549/1157633\n    this.host.nativeElement.show = this.showStitchModalExt.bind(this);\n    this.host.nativeElement.hide = this.hideStitchModalExt.bind(this);\n  }\n\n  ngAfterViewInit() {}\n  ngOnChanges(changes: any) {\n    Object.keys(changes).forEach((key,index) => {\n      if(changes[key].currentValue == changes[key].previousValue){\n        return //do nothing, noop\n      }\n\n      let systemUpdates = {}\n      systemUpdates[key] = changes[key].currentValue\n      if(key == 'publicId'){\n        console.log(\"Fasten Connect publicId changed\", changes[key].currentValue)\n        let apiMode = this.getApiModeFromPublicId(changes[key].currentValue)\n        systemUpdates['apiMode'] = apiMode\n      }\n\n      this.configService.systemConfig = systemUpdates\n    })\n  }\n\n  ngOnInit(): void {\n    let apiMode = this.getApiModeFromPublicId(this.publicId)\n    //update the system config\n    this.configService.systemConfig = {\n      apiMode: apiMode,\n      publicId: this.publicId,\n      externalId: this.externalId,\n      reconnectOrgConnectionId: this.reconnectOrgConnectionId,\n      staticBackdrop: this.staticBackdrop,\n      anonymousVaultProfile: this.anonymousVaultProfile\n    }\n\n    this.messageBus.messageBusSubject.subscribe((eventPayload) => {\n      console.log(\"bubbling up event\", eventPayload)\n      this.messageBusCallback.emit(eventPayload)\n    })\n  }\n\n  getApiModeFromPublicId(publicId: string): ApiMode {\n    let publicIdParts = publicId.split('_')\n    let apiMode = ApiMode.Test\n    if(publicIdParts.length == 3 && publicIdParts[1] == ApiMode.Live) {\n      apiMode = ApiMode.Live\n    }\n    if(publicIdParts.length != 3 ){\n      console.error(\"Could not register Fasten Connect installation: missing or invalid id\", this.publicId)\n      this.errorMessage = 'Could not register Fasten Connect installation: missing or invalid id. Please contact the developer of this app.'\n\n      //reset the org setting if set\n      this.configService.systemConfig = {\n        org: null\n      }\n      return apiMode\n    } else {\n      this.errorMessage = \"\"\n\n      this.vaultService.getOrgByPublicId(this.publicId).subscribe((org: Organization) => {\n        console.log(\"Fasten Connect registration\", org)\n        this.configService.systemConfig = {\n          org: org\n        }\n      },(err) => {\n        this.errorMessage = 'Could not register Fasten Connect installation using id. Please contact the developer of this app.'\n        console.log(\"Invalid Fasten Connect registration\", err)\n      })\n\n      return apiMode\n    }\n  }\n\n  showStitchModal(): void {\n    this.navOutletService.navigateByUrl(NavOutletPageName.Default)\n\n    if(this.reconnectOrgConnectionId){\n      this.vaultService.getOrgConnectionById(this.publicId, this.reconnectOrgConnectionId).subscribe((orgConnection) => {\n        console.log(\"Reconnect Org Connection\", orgConnection)\n\n\n        this.navOutletService.navigateByUrl(NavOutletPageName.HealthSystemConnecting, new Map<string,any>([\n          [\"brandId\", orgConnection.catalog_brand_id],\n          [\"portalId\", orgConnection.catalog_portal_id],\n          [\"endpointId\", orgConnection.catalog_endpoint_id],\n          [\"orgConnectionId\", orgConnection.org_connection_id],\n          [\"externalId\", this.externalId],\n          // [\"externalState\", this.externalState],\n        ]))\n\n        this.stitchModal.nativeElement.showModal()\n        this.registerDialogCloseOnBackdropClick()\n      }, (err) => {\n        this.errorMessage = 'Could not find the patient connection using id. Please contact the developer of this app.'\n        console.log(\"Invalid Fasten Connect Connection ID\", err)\n        this.stitchModal.nativeElement.showModal()\n        this.registerDialogCloseOnBackdropClick()\n      })\n    } else {\n      if(this.anonymousVaultProfile){\n        this.navOutletService.navigateByUrl(NavOutletPageName.HealthSystemSearch)\n      }\n      this.stitchModal.nativeElement.showModal()\n      this.registerDialogCloseOnBackdropClick()\n    }\n\n  }\n\n  // these functions can be called externally to show/hide the widget via javascript\n  showStitchModalExt(): void {\n    this.showStitchModal()\n  }\n\n  hideStitchModalExt(): void {\n    this.stitchModal.nativeElement.close()\n  }\n\n  //event handler for backdrop click\n  registerDialogCloseOnBackdropClick() {\n    this.stitchModal.nativeElement.addEventListener('click', (event) => {\n      if (this.configService.systemConfig$.staticBackdrop){\n        return\n      }\n\n      var rect = this.stitchModal.nativeElement.getBoundingClientRect();\n      var isInDialog = (rect.top <= event.clientY && event.clientY <= rect.top + rect.height &&\n        rect.left <= event.clientX && event.clientX <= rect.left + rect.width);\n      if (!isInDialog) {\n        this.stitchModal.nativeElement.close();\n      }\n    });\n  }\n}\n","<!-- Modal toggle -->\n<button #stitchModalButton (click)=\"showStitchModal()\" class=\"block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\" type=\"button\">\n  <div #ref><ng-content></ng-content></div>\n  <span *ngIf=\"!ref.hasChildNodes()\">\n    Share Records\n </span>\n</button>\n\n<!-- Main modal -->\n<dialog #stitchModal id=\"stitchModal\" tabindex=\"-1\" aria-hidden=\"true\" class=\"backdrop:backdrop-blur mx-auto w-full max-w-[440px] bg-white rounded-lg shadow-lg\">\n  <div *ngIf=\"(configService.systemConfigSubject | async)?.apiMode == 'test'\" id=\"test-mode-banner\"\n       class=\"top-0 sticky z-50 w-full mb-2 bg-[#DC3545] text-white text-center py-2 px-4 rounded-t-lg font-medium text-sm flex items-center justify-center gap-2\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-construction\"><rect x=\"2\" y=\"6\" width=\"20\" height=\"8\" rx=\"1\"/><path d=\"M17 14v7\"/><path d=\"M7 14v7\"/><path d=\"M17 3v3\"/><path d=\"M7 3v3\"/><path d=\"M10 14 2.3 6.3\"/><path d=\"m14 6 7.7 7.7\"/><path d=\"m8 6 8 8\"/></svg>\n    You are using Fasten in test mode\n  </div>\n  <div *ngIf=\"!errorMessage; else errorMessagePanel\" id=\"widget-container\" class=\"w-full p-6 min-h-96\" >\n    <app-nav-outlet></app-nav-outlet>\n  </div>\n</dialog>\n\n\n<ng-template #errorMessagePanel>\n\n    <div class=\"relative p-4 w-full max-w-2xl h-full md:h-auto\">\n    <div id=\"alert-additional-content-2\" class=\"p-4 border border-red-300 rounded-lg bg-[#DC3545] text-white\" role=\"alert\">\n      <div class=\"flex items-center\">\n        <svg class=\"flex-shrink-0 w-4 h-4 me-2\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path fill-rule=\"evenodd\" d=\"M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm7.707-3.707a1 1 0 0 0-1.414 1.414L10.586 12l-2.293 2.293a1 1 0 1 0 1.414 1.414L12 13.414l2.293 2.293a1 1 0 0 0 1.414-1.414L13.414 12l2.293-2.293a1 1 0 0 0-1.414-1.414L12 10.586 9.707 8.293Z\" clip-rule=\"evenodd\"/>\n        </svg>\n\n        <span class=\"sr-only\">Error</span>\n        <h3 class=\"text-lg font-medium\">Configuration Error</h3>\n      </div>\n      <div class=\"mt-2 mb-4 text-sm\">\n        {{errorMessage}}\n      </div>\n      <div class=\"flex\">\n\n        <button (click)=\"hideStitchModalExt()\" type=\"button\"\n                class=\"text-white bg-transparent border border-white hover:bg-red-900 hover:text-white focus:ring-4 focus:outline-none focus:ring-grey-300 font-medium rounded-lg text-xs px-3 py-1.5 text-center\">Close</button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import {EventTypes} from '../app.constants';\nimport {OrganizationConnectionCallbackEvent} from './organization-connection-callback-event';\nimport {ConnectData} from '../utils/connect-helper';\n\nexport class EventPayload {\n  api_mode: \"live\" | \"test\"\n  event_type: EventTypes\n  data: OrganizationConnectionCallbackEvent | ConnectData | OrganizationConnectionCallbackEvent[]\n}\n","export class VaultProfile {\n  id?: string\n  name?: string\n  email?: string\n  password?: string\n  org_id?: string\n\n  //not sent to the server\n  password_confirm?: string = \"\"\n  agree_terms?: boolean = false\n}\n","export class FormHealthSystemRequest {\n  name: string = \"\"\n  email: string = \"\"\n  website: string = \"\"\n  street_address: string = \"\"\n}\n","\nexport class FormSupportRequest {\n  healthsystem_name: string\n  email: string\n  request_content: string\n\n  org_id: string\n  org_name: string\n  version: string\n  arch: string\n  os: string\n}\n","\nexport class SearchFilter {\n  //primary search terms (changes here should restart the search completely)\n  query: string = \"\"\n\n  //secondary search terms/facets (changes here should restart pagination)\n  platformTypes: string[] = [];\n  categories: string[] = [];\n  showHidden: boolean = false;\n  locations: string[] = [];\n\n  //pagination - this is the current page (changes here should be ignored)\n  searchAfter: string | string[] = '';\n\n  fields: string[] = []; //specify the fields to return. if null or empty list, return all.\n}\n","/**\n * AppConfig interface. Update this interface to strictly type your config\n * object.\n */\nimport {ApiMode} from '../app.constants';\nimport {Organization} from './fasten/organization';\nimport {VaultProfile} from './fasten/vaultProfile';\nimport {SearchFilter} from './search-filter';\nimport {\n  LighthouseBrandListDisplayItem,\n  LighthouseEndpointListDisplayItem,\n  LighthousePortalListDisplayItem\n} from './lighthouse/lighthouse-source-search';\nimport {RecordLocatorFacility} from './fasten/record-locator-facility';\n\nexport interface VaultSystemConfig {\n  publicId: string;\n  apiMode: ApiMode;\n  org?: Organization;\n  org_id?: string\n  reconnectOrgConnectionId?: string;\n  externalId?: string;\n\n  staticBackdrop?: boolean; //default false; if true, the modal will not close when clicking outside of the modal or pressing the ESC key.\n  anonymousVaultProfile?: boolean; //default false; if true, the user is not required to be logged in and the vault profile is anonymous.\n}\n\n// There are 3 statuses for a patient account:\n// - Connected - the patient account is fully authorized and Fasten can access medical records from this institution\n// - Pending - the patient has specified they have records at this institution, but Fasten has not yet been able to access them.\n//             the patient must complete the connection process by logging into their account at the institution.\n// - Available - these are facilities that have been found via a record locator search. The patient has not yet agreed to share medical records from this institution.\n//             - this status is similar to \"pending\" for display purposes.\nexport class VaultProfileConfig {\n  vaultProfile?: VaultProfile;\n\n  // connected patient accounts\n  connectedPatientAccounts?: {\n    org_connection_id: string,\n    connection_status: string,\n    platform_type: string,\n\n    brand: LighthouseBrandListDisplayItem,\n    portal: LighthousePortalListDisplayItem,\n    endpoint: LighthouseEndpointListDisplayItem\n  }[];\n\n  // pending patient accounts\n  pendingPatientAccounts?: { brand: LighthouseBrandListDisplayItem, portal: LighthousePortalListDisplayItem, endpoint: LighthouseEndpointListDisplayItem }[];\n\n  // available facilities -- found via record locator search\n  availableFacilities?: RecordLocatorFacility[];\n\n\n  addPendingAccount(brand: LighthouseBrandListDisplayItem, portal: LighthousePortalListDisplayItem, endpoint: LighthouseEndpointListDisplayItem): void {\n    if (!this.pendingPatientAccounts) {\n      this.pendingPatientAccounts = []\n    }\n    this.pendingPatientAccounts?.push({brand, portal, endpoint})\n  }\n\n  addConnectedAccount(org_connection_id: string, connection_status: string, platform_type: string, brand_id: string, portal_id: string, endpoint_id: string): void {\n    if (!this.connectedPatientAccounts) {\n      this.connectedPatientAccounts = []\n    }\n\n    //find the newly connected account metadata from the pending list and move it to the connected list\n    let pendingIndex = this.pendingPatientAccounts?.findIndex((pendingAccount) => {\n      return pendingAccount.brand.id == brand_id && pendingAccount.portal.id == portal_id && pendingAccount.endpoint.id == endpoint_id\n    })\n\n    if (pendingIndex != -1) {\n      let pendingAccount = this.pendingPatientAccounts?.splice(pendingIndex, 1)[0]\n      this.connectedPatientAccounts?.push({org_connection_id, connection_status, platform_type, brand: pendingAccount.brand, portal: pendingAccount.portal, endpoint: pendingAccount.endpoint})\n    } else {\n      //TODO: lookup the brand, portal, endpoing information by ID from the Lighthouse API, and add it to the connected Patients account list.\n      console.error(\"NOT SUPPORTED: could not find the brand, portal, endpoint information by ID\")\n    }\n  }\n\n\n  addAvailableRecordLocatorAccount(recordLocatorFacility: RecordLocatorFacility): void {\n    if (!this.availableFacilities) {\n      this.availableFacilities = []\n    }\n    this.availableFacilities?.push(recordLocatorFacility)\n  }\n}\n\n\nexport interface VaultSearchConfig {\n  searchFilter?: SearchFilter\n  selectedBrand?: LighthouseBrandListDisplayItem\n}\n\n// - apiMode\n// - organization information\n// - org credential information\n// - reconnect id.\n\n/**\n * Default configuration for the entire application. This object is used by\n * \"PortalConfigService\" to set the default configuration.\n */\nexport const vaultConfigDefaults: VaultSystemConfig = {\n  publicId: '',\n  apiMode: ApiMode.Test\n};\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\nimport {ConfigService} from '../../services/config.service';\n\n@Component({\n  selector: 'app-complete',\n  templateUrl: './complete.component.html',\n  styleUrls: ['./complete.component.scss']\n})\nexport class CompleteComponent implements OnInit, NavOutletPage {\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    public configService: ConfigService,\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n\n}\n","<!-- Step: COMPLETION -->\n<div id=\"step-completion\" class=\"text-center space-y-6\">\n  <div class=\"flex justify-center items-center\">\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n  <div class=\"w-16 h-16 mx-auto bg-[#5B47FB]/10 rounded-full flex items-center justify-center success-circle\">\n    <svg class=\"w-8 h-8 text-[#5B47FB]\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2.5\"\n         viewBox=\"0 0 24 24\">\n      <path class=\"success-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n    </svg>\n  </div>\n\n  <div class=\"space-y-2\">\n    <h2 class=\"text-2xl font-bold\">Success!</h2>\n    <p class=\"text-gray-600\">\n      Your health records have been successfully linked with {{(configService.systemConfigSubject | async).org?.name || 'Unknown'}}.\n      You can now close this window.\n    </p>\n  </div>\n\n  <button id=\"completion-close\" class=\"bg-[#5B47FB] hover:bg-[#4936E8] text-white py-2 px-4 rounded-md\">\n    Close\n  </button>\n</div>\n<!-- End Step: COMPLETION -->\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {VaultService} from '../../services/vault.service';\nimport {ConfigService} from '../../services/config.service';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../../app.routing';\nimport {MessageBusService} from '../../services/message-bus.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit, NavOutletPage {\n\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    private vaultService: VaultService,\n    public configService: ConfigService,\n    private navOutletService: NavOutletService,\n    private messageBus: MessageBusService,\n  ) { }\n\n  ngOnInit(): void {\n    // this.vaultService.getRecordLocatorFacilities().subscribe((facilities)=>{\n    //   console.log(\"record locator facilities\", facilities)\n    //   for (let facility of facilities) {\n    //     this.configService.vaultProfileAddConnectedAccount(facility)\n    //   }\n    // })\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n  connectAccount(pendingAccount){\n    console.log(\"connecting account\", pendingAccount)\n    this.navOutletService.navigateByUrl(NavOutletPageName.HealthSystemConnecting, new Map<string,any>([\n      [\"brandId\", pendingAccount.brand?.id],\n      [\"portalId\", pendingAccount.portal?.id],\n      [\"endpointId\", pendingAccount.endpoint?.id],\n      [\"externalId\", this.configService.systemConfig$.externalId],\n    ]))\n  }\n\n  completeAccounts(){\n    //publish events for all connected accounts\n    this.messageBus.publishComplete()\n\n    this.navOutletService.navigateByUrl(NavOutletPageName.CompleteSummary)\n  }\n\n}\n","<div id=\"step-connecting-systems\" class=\"space-y-6\">\n  <div class=\"flex justify-center items-center\">\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n  <div class=\"space-y-2\">\n    <h2 class=\"text-xl font-bold\">Select Health Systems</h2>\n    <p class=\"text-sm text-gray-600\">\n      Choose the health systems you'd like to connect\n    </p>\n  </div>\n\n  <!-- dynamically populate list of systems -->\n  <div class=\"space-y-3\" id=\"connecting-systems-list\">\n    <!-- connected accounts -->\n    <div *ngFor=\"let connectedAccount of ((configService.vaultProfileConfigSubject | async)?.connectedPatientAccounts || [])\" class=\"flex items-center p-3 border rounded-lg hover:border-[#5B47FB]/30 hover:shadow-sm transition-all\">\n      <button class=\"connect-btn w-8 h-8 rounded-full border border-[#5B47FB] bg-[#5B47FB] transition-all hover:bg-[#4936E8] hover:border-[#4936E8] animate-scale\">\n        <svg class=\"w-4 h-4 mx-auto text-white animate-scale\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n      </button>\n      <img imageFallback src=\"https://cdn.fastenhealth.com/logos/sources/{{connectedAccount.brand?.id}}.png\" alt=\"{{connectedAccount.brand?.name}}\" class=\"w-8 max-h-8 mx-4 rounded\">\n      <div class=\"flex-1 min-w-0\"><p class=\"font-semibold\">{{connectedAccount.portal.name}}</p>\n        <p class=\"text-sm text-gray-600\">Connected</p></div>\n    </div>\n    <!-- pending accounts -->\n    <div *ngFor=\"let pendingAccount of ((configService.vaultProfileConfigSubject | async)?.pendingPatientAccounts || [])\"\n         class=\"flex items-center p-3 border rounded-lg hover:border-[#5B47FB]/30 hover:shadow-sm transition-all\">\n      <div class=\"w-8 h-8 flex items-center justify-center animate-bounce\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-amber-500\">\n          <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path>\n          <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line>\n          <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\n        </svg>\n      </div>\n      <img imageFallback src=\"https://cdn.fastenhealth.com/logos/sources/{{pendingAccount.brand?.id}}.png\" alt=\"{{pendingAccount.brand?.name}}\" class=\"w-8 max-h-8 mx-3 rounded\">\n      <div class=\"flex-1 min-w-0\"><p class=\"font-semibold\">{{pendingAccount.portal.name}}</p>\n        <p class=\"text-sm text-gray-600\">Sign in required</p>\n      </div>\n      <a\n        (click)=\"connectAccount(pendingAccount)\"\n        class=\"border border-[#5B47FB] text-[#5B47FB] hover:bg-[#5B47FB] hover:text-white px-4 py-1.5 rounded-lg text-sm font-medium transition-colors\">\n        Sign in\n      </a>\n    </div>\n  </div>\n\n  <!-- Search button to connect new system -->\n  <button id=\"search-button\"\n          [navOutletLink]=\"'health-system-search'\"\n          class=\"w-full border border-gray-200 rounded-lg flex justify-between items-center px-4 py-3 text-sm font-medium hover:border-[#5B47FB] hover:bg-[#5B47FB]/5 transition-all\">\n    <div class=\"flex items-center gap-2\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n        <path d=\"M21 21l-5.2-5.2m2.2-5.3a7.5 7.5 0 11-15 0 7.5 7.5 0 0115 0z\" stroke-width=\"2\"\n              stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg>\n      <span>Connect a new health system</span>\n    </div>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n         stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n         class=\"lucide lucide-chevron-right w-5 h-5 text-gray-400\">\n      <polyline points=\"9 6 15 12 9 18\" />\n    </svg>\n  </button>\n\n  <div class=\"flex items-center justify-between pt-4\">\n    <div class=\"flex items-center gap-2 text-sm text-gray-600\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-lock w-4 h-4\"><rect width=\"18\" height=\"11\" x=\"3\" y=\"11\" rx=\"2\" ry=\"2\"/><path d=\"M7 11V7a5 5 0 0 1 10 0v4\"/></svg>\n      <span>Your medical records are secure</span>\n    </div>\n    <button [disabled]=\"!((configService.vaultProfileConfigSubject | async)?.connectedPatientAccounts || []).length\"\n            (click)=\"completeAccounts()\"\n            id=\"connecting-continue\"\n            class=\"bg-[#5B47FB] hover:bg-[#4936E8] text-white py-2 px-4 rounded-md disabled:opacity-50\">\n      Continue\n    </button>\n  </div>\n</div>\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {VaultService} from '../../services/vault.service';\nimport {ConfigService} from '../../services/config.service';\nimport {FormHealthSystemRequest} from '../../models/forms/form-health-system-request';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../../app.routing';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\n\n@Component({\n  selector: 'app-form-health-system-request',\n  templateUrl: './form-health-system-request.component.html',\n  styleUrls: ['./form-health-system-request.component.scss']\n})\nexport class FormHealthSystemRequestComponent implements OnInit, NavOutletPage {\n  formRequestHealthSystem: FormHealthSystemRequest = {} as FormHealthSystemRequest\n\n  loading: boolean = false\n  submitSuccess: boolean = false\n  errorMsg: string = \"\"\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    private navOutletService: NavOutletService,\n    private configService: ConfigService,\n    private vaultApi: VaultService,\n  ) { }\n\n  ngOnInit(): void {\n    this.resetForm()\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n  resetForm() {\n    this.submitSuccess = false\n    let requestForm = new FormHealthSystemRequest()\n    requestForm.email = ''\n    requestForm.name = this.configService.searchConfig$.searchFilter?.query || \"\"\n    requestForm.street_address = ''\n    requestForm.website = ''\n\n    this.formRequestHealthSystem = requestForm\n  }\n\n  submitForm() {\n    this.loading = true\n    this.vaultApi.requestHealthSystem(this.formRequestHealthSystem).subscribe((resp: any) => {\n        this.loading = false\n        this.submitSuccess = true\n        //show success toast? close modal?\n      },\n      (err)=>{\n        this.loading = false\n        console.error(\"an error occurred during request submission\",err)\n        this.errorMsg = err || \"An error occurred while submitting your request. Please try again later.\"\n      })\n  }\n\n  dismiss(){\n    // this.messageBus.componentNavigationSubject.next({\n    //   page: ComponentNavPage.Search,\n    // } as ComponentNavigationEvent)\n\n    this.navOutletService.navigateByUrl(NavOutletPageName.Dashboard)\n  }\n}\n","<!-- Step: REQUEST FORM -->\n<div id=\"step-request-form\" class=\"space-y-6\">\n  <div id=\"request-form-nav\" class=\"relative flex justify-center items-center\">\n    <button [navOutletLink]=\"'dashboard'\" type=\"button\" id=\"request-back\"\n            class=\"absolute left-0 top-1/2 -translate-y-1/2 text-gray-700 p-2 hover:bg-gray-100 rounded-md\">\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\n      </svg>\n    </button>\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n\n  <form id=\"request-form\" class=\"space-y-6\" *ngIf=\"!submitSuccess; else requestSuccess\" (ngSubmit)=\"submitForm()\" #healthSystemRequestForm=\"ngForm\">\n    <div id=\"request-form-header\" class=\"space-y-2\">\n      <h2 class=\"text-xl font-bold\">Request your Health System</h2>\n      <p class=\"text-base text-gray-600\">\n        Sharing your email address and related information helps us prioritize your Health System.\n      </p>\n    </div>\n\n    <div class=\"space-y-4\">\n      <div class=\"space-y-2\">\n        <label class=\"block text-sm font-medium text-gray-700 tracking-tight\">Your email address\n          <span class=\"text-red-500\">*</span></label>\n        <input id=\"request-email\" type=\"email\" placeholder=\"you@example.com\" required email\n               [(ngModel)]=\"formRequestHealthSystem.email\" name=\"email\" #email=\"ngModel\"\n               class=\"block w-full mt-1 px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20 tracking-tight\" />\n        <p *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"mt-2 text-sm text-red-600 dark:text-red-500\">\n          <span *ngIf=\"email.errors?.['required']\">\n            Email is required.\n          </span>\n            <span *ngIf=\"email.errors?.['email']\">\n            Email must be valid.\n          </span>\n        </p>\n      </div>\n\n      <div class=\"space-y-2\">\n        <label class=\"block text-sm font-medium text-gray-700 tracking-tight\">Health system name\n          <span class=\"text-red-500\">*</span></label>\n        <input id=\"request-healthsystem\" type=\"text\"\n               placeholder=\"Mayo Clinic, Cleveland Clinic, Kaiser Permanente\"\n               [(ngModel)]=\"formRequestHealthSystem.name\" name=\"name\" #name=\"ngModel\" required minlength=\"4\"\n               class=\"block w-full mt-1 px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20 tracking-tight\" />\n        <p *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"mt-2 text-sm text-red-600 dark:text-red-500\">\n        <span *ngIf=\"name.errors?.['required']\">\n          Health system name is required.\n        </span>\n          <span *ngIf=\"name.errors?.['minlength']\">\n          Health system name must be at least 4 characters long.\n        </span>\n        </p>\n      </div>\n\n      <div class=\"space-y-2\">\n        <label class=\"block text-sm font-medium text-gray-700 tracking-tight\">Website <span\n          class=\"text-red-500\">*</span></label>\n        <input id=\"request-website\" type=\"text\" placeholder=\"www.mayoclinic.org\"\n               [(ngModel)]=\"formRequestHealthSystem.website\"name=\"website\" #website=\"ngModel\" required minlength=\"4\"\n               class=\"block w-full mt-1 px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20 tracking-tight\" />\n        <p *ngIf=\"website.invalid && (website.dirty || website.touched)\" class=\"mt-2 text-sm text-red-600 dark:text-red-500\">\n        <span *ngIf=\"website.errors?.['required']\">\n          Website is required.\n        </span>\n          <span *ngIf=\"website.errors?.['minlength']\">\n          Website must be at least 4 characters long.\n        </span>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"space-y-2\">\n      <label class=\"block text-sm font-medium text-gray-700 tracking-tight\">Street Address</label>\n      <input id=\"request-address\" type=\"text\" placeholder=\"123 Broadway, New York, NY\"\n             [(ngModel)]=\"formRequestHealthSystem.street_address\"name=\"website\" #street_address=\"ngModel\"\n             class=\"block w-full mt-1 px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20 tracking-tight\" />\n    </div>\n\n    <p *ngIf=\"errorMsg\" class=\"mt-2 text-sm text-red-600 dark:text-red-500\">\n      <strong>Error</strong> {{errorMsg}}\n    </p>\n\n    <button type=\"submit\"\n      [disabled]=\"!healthSystemRequestForm.form.valid || loading\"\n      class=\"w-full bg-[#5B47FB] hover:bg-[#4936E8] text-white py-2 px-4 rounded-md tracking-tight font-medium flex justify-center items-center\">\n      <app-spinner *ngIf=\"loading\"></app-spinner>\n      Submit\n    </button>\n  </form>\n</div>\n<!-- End Step: REQUEST FORM -->\n\n<ng-template #requestSuccess>\n\n  <!-- Success animation container -->\n  <div id=\"request-success-animation\" class=\" text-center py-16\">\n    <div class=\"w-16 h-16 mx-auto bg-[#5B47FB]/10 rounded-full flex items-center justify-center success-circle\">\n      <svg class=\"w-8 h-8 text-[#5B47FB]\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2.5\"\n           viewBox=\"0 0 24 24\">\n        <path class=\"success-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n      </svg>\n    </div>\n    <div class=\"flex items-center justify-center\">\n\n      <div>\n        <div class=\"text-base text-gray-600 py-5\">\n          Thanks for providing information about your Health System. Your request has been recorded and we will notify you once your Health System is supported.\n        </div>\n        <button (click)=\"dismiss()\" type=\"button\" class=\"py-2 w-full bg-[#5B47FB] hover:bg-[#4936E8] text-white py-2 px-4 rounded-md tracking-tight font-medium\" >\n          Dismiss\n        </button>\n      </div>\n\n    </div>\n  </div>\n\n</ng-template>\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {FormHealthSystemRequest} from '../../models/forms/form-health-system-request';\nimport {Router} from '@angular/router';\nimport {ConfigService} from '../../services/config.service';\nimport {VaultService} from '../../services/vault.service';\nimport {FormSupportRequest} from '../../models/forms/form-support-request';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../../app.routing';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\n\n@Component({\n  selector: 'app-form-support-request',\n  templateUrl: './form-support-request.component.html',\n  styleUrls: ['./form-support-request.component.scss']\n})\nexport class FormSupportRequestComponent implements OnInit, NavOutletPage {\n  formSupportRequest: FormSupportRequest = {} as FormSupportRequest\n\n  loading: boolean = false\n  submitSuccess: boolean = false\n  errorMsg: string = \"\"\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    private navOutletService: NavOutletService,\n    private configService: ConfigService,\n    private vaultApi: VaultService,\n  ) { }\n\n  ngOnInit(): void {\n    this.resetForm()\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n\n  resetForm() {\n    this.submitSuccess = false\n    let requestForm = new FormSupportRequest()\n    requestForm.email = ''\n    requestForm.healthsystem_name = this.configService.searchConfig$.searchFilter?.query || \"\"\n    requestForm.request_content = ''\n\n    this.formSupportRequest = requestForm\n  }\n\n  submitForm() {\n    this.loading = true\n    this.vaultApi.requestSupport(this.formSupportRequest).subscribe((resp: any) => {\n        this.loading = false\n        this.submitSuccess = true\n        //show success toast? close modal?\n      },\n      (err)=>{\n        this.loading = false\n        console.error(\"an error occurred during issue submission\",err)\n        this.errorMsg = err || \"An error occurred while submitting your issue. Please try again later.\"\n      })\n  }\n\n  dismiss(){\n    // this.messageBus.componentNavigationSubject.next({\n    //   page: ComponentNavPage.Search,\n    // } as ComponentNavigationEvent)\n\n    this.navOutletService.navigateByUrl(NavOutletPageName.Dashboard)\n  }\n\n}\n","<!-- Step: SUPPORT REQUEST FORM -->\n<div id=\"step-request-form\" class=\"space-y-6\">\n  <div id=\"request-form-nav\" class=\"relative flex justify-center items-center\">\n    <button [navOutletLink]=\"'dashboard'\" type=\"button\" id=\"request-back\"\n            class=\"absolute left-0 top-1/2 -translate-y-1/2 text-gray-700 p-2 hover:bg-gray-100 rounded-md\">\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\n      </svg>\n    </button>\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n\n  <form id=\"request-form\" class=\"space-y-6\" *ngIf=\"!submitSuccess; else requestSuccess\" (ngSubmit)=\"submitForm()\" #supportRequestForm=\"ngForm\">\n    <div id=\"request-form-header\" class=\"space-y-2\">\n      <h2 class=\"text-xl font-bold\">Report an issue</h2>\n      <p class=\"text-base text-gray-600\">\n        Sharing your email address and related information helps us prioritize your issue.\n      </p>\n    </div>\n\n    <div class=\"space-y-4\">\n      <div class=\"space-y-2\">\n        <label class=\"block text-sm font-medium text-gray-700 tracking-tight\">Your email address\n          <span class=\"text-red-500\">*</span></label>\n        <input id=\"request-email\" type=\"email\" placeholder=\"you@example.com\" required\n               class=\"block w-full mt-1 px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20 tracking-tight\" />\n      </div>\n\n      <div class=\"space-y-2\">\n        <label class=\"block text-sm font-medium text-gray-700 tracking-tight\">Health system name\n          <span class=\"text-red-500\">*</span></label>\n        <input id=\"request-healthsystem\" type=\"text\" readonly\n               placeholder=\"Mayo Clinic, Cleveland Clinic, Kaiser Permanente\" required\n               class=\"block w-full mt-1 px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20 tracking-tight\" />\n      </div>\n\n      <div class=\"space-y-2\">\n        <label class=\"block text-sm font-medium text-gray-700 tracking-tight\">Describe your issue<span\n          class=\"text-red-500\">*</span></label>\n        <textarea id=\"request-description\" placeholder=\"please provide as much data as possible, it helps us prioritize your issue\" required\n                  class=\"block w-full mt-1 px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20 tracking-tight\" ></textarea>\n      </div>\n    </div>\n\n    <button type=\"submit\"\n      [disabled]=\"!supportRequestForm.form.valid || loading\"\n      class=\"w-full bg-[#5B47FB] hover:bg-[#4936E8] text-white py-2 px-4 rounded-md tracking-tight font-medium flex justify-center items-center\">\n      <app-spinner *ngIf=\"loading\"></app-spinner>\n      Submit\n    </button>\n  </form>\n</div>\n<!-- End Step: REQUEST FORM -->\n\n<ng-template #requestSuccess>\n\n  <!-- Success animation container -->\n  <div id=\"request-success-animation\" class=\" text-center py-16\">\n    <div class=\"w-16 h-16 mx-auto bg-[#5B47FB]/10 rounded-full flex items-center justify-center success-circle\">\n      <svg class=\"w-8 h-8 text-[#5B47FB]\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2.5\"\n           viewBox=\"0 0 24 24\">\n        <path class=\"success-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n      </svg>\n    </div>\n    <div class=\"flex items-center justify-center\">\n\n      <div>\n        <div class=\"text-base text-gray-600 py-5\">\n          Thanks for providing information about your issue. Your request has been recorded and we will notify you once we have an update.\n        </div>\n        <button (click)=\"dismiss()\" type=\"button\" class=\"py-2 w-full bg-[#5B47FB] hover:bg-[#4936E8] text-white py-2 px-4 rounded-md tracking-tight font-medium\" >\n          Dismiss\n        </button>\n      </div>\n\n    </div>\n  </div>\n\n</ng-template>\n","import {ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {\n  LighthouseBrandListDisplayItem, LighthouseEndpointListDisplayItem,\n  LighthousePortalListDisplayItem\n} from '../../models/lighthouse/lighthouse-source-search';\nimport {ConfigService} from '../../services/config.service';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../../app.routing';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\n\n@Component({\n  selector: 'app-health-system-brand-details',\n  templateUrl: './health-system-brand-details.component.html',\n  styleUrls: ['./health-system-brand-details.component.scss']\n})\nexport class HealthSystemBrandDetailsComponent implements OnInit, NavOutletPage {\n\n  @Input() brand!: LighthouseBrandListDisplayItem;\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    public configService: ConfigService,\n    public navOutletService: NavOutletService\n  ) {\n    this.brand = configService.searchConfig$.selectedBrand!\n  }\n\n  ngOnInit(): void {\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n\n  addPendingAccount(brand: LighthouseBrandListDisplayItem, portal: LighthousePortalListDisplayItem, endpoint: LighthouseEndpointListDisplayItem){\n    console.log(\"addPendingAccount\")\n    this.configService.vaultProfileAddPendingAccount(brand, portal, endpoint)\n    this.navOutletService.navigateByUrl(NavOutletPageName.Dashboard)\n  }\n}\n","<!-- Step: HEALTH SYSTEM DETAILS -->\n<div id=\"step-health-system-details\" class=\"space-y-6\">\n  <div class=\"relative flex justify-center items-center\">\n    <button [navOutletLink]=\"'health-system-search'\" type=\"button\" id=\"hsd-back\"\n            class=\"absolute left-0 top-1/2 -translate-y-1/2 text-gray-700 p-2 hover:bg-gray-100 rounded-md\">\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\n      </svg>\n    </button>\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n  <div class=\"space-y-6\">\n    <!-- Health System Brand Card -->\n    <div class=\"border rounded-2xl p-6\">\n      <div class=\"flex items-start space-x-4 mb-4\">\n        <div class=\"flex-shrink-0\">\n          <img class=\"w-12 max-h-12 rounded-lg object-contain\" imageFallback src=\"https://cdn.fastenhealth.com/logos/sources/{{brand.id}}.png\">\n        </div>\n        <div class=\"flex-1 min-w-0\">\n          <h2 id=\"hsd-name\" class=\"text-xl font-semibold\">{{brand.name}}</h2>\n        </div>\n      </div>\n\n      <p id=\"hsd-description\" class=\"text-gray-600 text-base mb-4\"></p>\n\n      <div class=\"space-y-2\">\n        <div *ngIf=\"brand.brand_website\" class=\"flex items-center gap-2 text-gray-600\" id=\"hsd-website-container\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n               stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n               class=\"lucide lucide-globe w-5 h-5\">\n            <circle cx=\"12\" cy=\"12\" r=\"10\" />\n            <path d=\"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\" />\n            <path d=\"M2 12h20\" />\n          </svg>\n          <a id=\"hsd-website\" class=\"text-base hover:underline\" [href]=\"brand.brand_website\" target=\"_blank\" rel=\"noopener noreferrer\">{{brand.brand_website}}</a>\n        </div>\n        <div *ngIf=\"brand.locations\" class=\"flex items-center gap-2 text-gray-600\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n               stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n               class=\"lucide lucide-map-pin w-5 h-5\">\n            <path d=\"M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0\" />\n            <circle cx=\"12\" cy=\"10\" r=\"3\" />\n          </svg>\n          <span id=\"hsd-location\" class=\"text-base\">\n            <span *ngFor=\"let stateCode of brand.locations | slice:0:3;\">{{stateCode | stateName}}</span>\n            <span *ngIf=\"brand.locations.length > 4\">+ {{brand.locations.length}}</span>\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Institutions List -->\n    <div class=\"space-y-2\" id=\"hsd-institutions-list\">\n      <ng-container *ngFor=\"let portal of brand.portals\">\n        <div *ngFor=\"let endpoint of portal.endpoints\" class=\"p-4 border rounded-lg hover:border-gray-400 transition-colors\">\n          <div class=\"flex items-center justify-between\">\n            <h4 class=\"font-medium text-base tracking-tight\">{{portal.name}}</h4>\n            <button (click)=\"addPendingAccount(brand, portal, endpoint)\" type=\"button\" class=\"border border-[#5B47FB] text-[#5B47FB] hover:bg-[#5B47FB] hover:text-white w-8 h-8 rounded-lg text-lg font-medium transition-colors flex items-center justify-center\">+</button>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<!-- End Step: HEALTH SYSTEM DETAILS -->\n","import {ChangeDetectorRef, Component, EnvironmentInjector, Injector, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ConnectHelper} from '../../utils/connect-helper';\nimport {VaultService} from '../../services/vault.service';\nimport {ConfigService} from '../../services/config.service';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\nimport {NavOutletPageName} from '../../app.routing';\n\n@Component({\n  selector: 'app-health-system-connecting',\n  templateUrl: './health-system-connecting.component.html',\n  styleUrls: ['./health-system-connecting.component.scss']\n})\nexport class HealthSystemConnectingComponent implements OnInit, NavOutletPage {\n  @Input() brandId: string = \"\";\n  @Input() portalId: string = \"\";\n  @Input() endpointId: string = \"\";\n\n  @Input() orgConnectionId?: string = \"\";\n  @Input() externalId?: string = \"\";\n  @Input() externalState?: string = \"\";\n\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    public configService: ConfigService,\n    private navOutletService: NavOutletService,\n    private injector: EnvironmentInjector\n  ){}\n\n  ngOnInit(): void {\n\n    this.injector.runInContext(() => {\n\n      ConnectHelper({\n        public_id: this.configService.systemConfig$.publicId,\n        brand_id: this.brandId,\n        portal_id: this.portalId,\n        endpoint_id: this.endpointId,\n        org_connection_id: this.orgConnectionId,\n        external_id: this.externalId,\n        external_state: this.externalState,\n        // connect_mode: this.connectMode,\n      })\n\n      //TODO: on complete, if reconnecting, we should redirect to the complete page, otherwise, we should redirect to the dashboard\n    })\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n\n  cancelAccountConnect(){\n\n    this.navOutletService.navigateByUrl(NavOutletPageName.Dashboard)\n  }\n}\n","<!-- Step: CONNECTING -->\n<div class=\"space-y-6\">\n  <div class=\"relative flex justify-center items-center\">\n    <button *ngIf=\"!orgConnectionId\" (click)=\"cancelAccountConnect()\"  type=\"button\" id=\"connecting-back\" class=\"absolute left-0 top-1/2 -translate-y-1/2 text-gray-700 p-2 hover:bg-gray-100 rounded-md\">\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\n      </svg>\n    </button>\n    <button *ngIf=\"!orgConnectionId\" type=\"button\" id=\"connecting-close\" class=\"absolute right-0 top-1/2 -translate-y-1/2 text-gray-700 p-2 hover:bg-gray-100 rounded-md\">\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </button>\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n  <div class=\"flex items-center justify-center gap-4\">\n    <!-- Fasten Logo -->\n    <div class=\"relative w-16 h-16 bg-white rounded-2xl shadow-md p-3 animate-pulse-flow delay-100\">\n      <img imageFallback=\"unknown-organization\" [src]=\"(configService.systemConfigSubject | async).org?.logo_uri\" alt=\"Organization Logo\"class=\"w-full h-full object-contain\"/>\n    </div>\n\n    <!-- Connection Animation -->\n    <div class=\"flex space-x-1\">\n      <div class=\"w-2 h-2 bg-[#5B47FB] rounded-full animate-pulse-flow delay-100\"></div>\n      <div class=\"w-2 h-2 bg-[#5B47FB] rounded-full animate-pulse-flow delay-200\"></div>\n      <div class=\"w-2 h-2 bg-[#5B47FB] rounded-full animate-pulse-flow delay-300\"></div>\n    </div>\n\n    <!-- Health System Logo -->\n    <div class=\"relative w-16 h-16 bg-white rounded-2xl shadow-md p-3 animate-pulse-flow delay-300\">\n      <div id=\"connecting-system-logo-container\" class=\"w-full h-full flex items-center justify-center\">\n        <img id=\"connecting-system-logo\"\n             class=\"w-full h-full object-contain\"\n             imageFallback=\"hospital\" src=\"https://cdn.fastenhealth.com/logos/sources/{{brandId}}.png\" />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"text-center space-y-2\">\n    <h2 id=\"connecting-title\" class=\"text-xl font-semibold text-gray-900\"></h2>\n    <p id=\"connecting-subtitle\" class=\"text-sm text-gray-600\">Redirecting to sign in...</p>\n  </div>\n\n  <!-- Support Panel -->\n  <div class=\"mt-8 p-4 bg-gray-50 rounded-lg space-y-4\">\n    <div class=\"flex items-center gap-2 text-gray-700\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-5 h-5\">\n        <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n        <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/>\n        <path d=\"M12 17h.01\"/>\n      </svg>\n      <span class=\"font-medium\">Having trouble?</span>\n    </div>\n    <p class=\"text-sm text-gray-600\">\n      If you're experiencing issues connecting to your health system, our support team is here to help.\n    </p>\n    <button [navOutletLink]=\"'form-support-request'\"  class=\"w-full bg-white border border-gray-200 text-[#5B47FB] hover:bg-[#5B47FB] hover:text-white hover:border-[#5B47FB] font-medium py-2 px-4 rounded-md transition-colors\">\n      Contact Support\n    </button>\n  </div>\n</div>\n<!-- End Step: CONNECTING -->\n\n\n<!-- Redirect Overlay -->\n<!--<div class=\"space-y-6\">-->\n<!--  <div id=\"request-form-nav\" class=\"relative flex justify-center items-center\">-->\n<!--    <button [navOutletLink]=\"'dashboard'\" type=\"button\" id=\"request-back\"-->\n<!--            class=\"absolute left-0 top-1/2 -translate-y-1/2 text-gray-700 p-2 hover:bg-gray-100 rounded-md\">-->\n<!--      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\">-->\n<!--        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 19l-7-7 7-7\" />-->\n<!--      </svg>-->\n<!--    </button>-->\n<!--    <h1 class=\"az-logo\">fasten</h1>-->\n<!--  </div>-->\n<!--  <div id=\"redirect-overlay\" class=\"flex items-center justify-center z-50 redirect-overlay-enter\">-->\n<!--    <div class=\"bg-white rounded-2xl p-8 w-[90%] max-w-[360px] relative redirect-overlay-content\">-->\n\n\n<!--      <div class=\"relative w-24 h-24 mx-auto mb-8 redirect-logo-container\">-->\n<!--        <div class=\"absolute inset-0 bg-white rounded-2xl shadow-sm p-4\">-->\n<!--          <img imageFallback src=\"https://cdn.fastenhealth.com/logos/sources/{{brandId}}.png\" alt=\"\" class=\"w-full h-full object-contain\" />-->\n<!--        </div>-->\n<!--      </div>-->\n\n<!--      <div class=\"text-center space-y-3\">-->\n<!--        <h3 id=\"redirect-name\" class=\"text-xl font-semibold text-gray-900\"></h3>-->\n<!--        <p id=\"redirect-website\" class=\"text-sm text-gray-500\" style=\"display: none;\"></p>-->\n\n<!--        <div class=\"bg-[#5B47FB]/5 rounded-xl p-4 mt-6\">-->\n<!--          <div class=\"redirect-dots\">-->\n<!--            <div class=\"redirect-dot\"></div>-->\n<!--            <div class=\"redirect-dot\"></div>-->\n<!--            <div class=\"redirect-dot\"></div>-->\n<!--          </div>-->\n<!--          <p class=\"text-sm text-gray-600\">Redirecting to sign in...</p>-->\n<!--        </div>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--  </div>-->\n\n<!--</div>-->\n","import {ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {SourceListItem} from '../../models/source-list-item';\nimport {\n  LighthouseBrandListDisplayItem,\n  LighthouseSourceSearch,\n  LighthouseSourceSearchAggregation\n} from '../../models/lighthouse/lighthouse-source-search';\nimport {Observable, of} from 'rxjs';\nimport {SearchFilter} from '../../models/search-filter';\nimport {VaultService} from '../../services/vault.service';\nimport {ConfigService} from '../../services/config.service';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../../app.routing';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\n\n@Component({\n  selector: 'app-health-system-search',\n  templateUrl: './health-system-search.component.html',\n  styleUrls: ['./health-system-search.component.scss']\n})\nexport class HealthSystemSearchComponent implements OnInit, NavOutletPage {\n  loading = false;\n  lighthouseBrandList: SourceListItem[] = []\n\n  showFilters: boolean = false\n  filter: SearchFilter = new SearchFilter()\n\n  //limits that are tied to the current result set.\n  resultLimits: {\n    totalItems: number,\n    scrollComplete: boolean,\n    platformTypesBuckets: LighthouseSourceSearchAggregation | undefined,\n    categoryBuckets: LighthouseSourceSearchAggregation | undefined,\n  } = {\n    totalItems: 0,\n    scrollComplete: false,\n    platformTypesBuckets: undefined,\n    categoryBuckets: undefined\n  }\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    public vaultServiceApi: VaultService,\n    public configService: ConfigService,\n    public navOutletService: NavOutletService\n  ) { }\n\n  ngOnInit(): void {\n    this.querySources(true)\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n\n  public querySources(reset: boolean): Observable<LighthouseSourceSearch|null> {\n    if(reset){\n      this.resetSearch()\n    }\n\n    console.log(\"querySources()\", this.filter)\n    if(this.loading){\n      console.log(\"already loading, ignoring querySources()\")\n      return of(null)\n    }\n    //TODO: pass filter to function.\n    // this.location.replaceState('/dashboard','', this.filter)\n\n    if(!this.filter){\n      this.filter = new SearchFilter()\n      console.log(\"querySources() - no filter provided, using current form value\", this.filter)\n    }\n\n\n    this.filter.fields = [\"*\"];\n    // this.filter.locations = [\"ALL\"]\n    this.loading = true\n    // this.filter.showHidden = true\n    // this.filter.platformTypes = [\"epic\"]\n    var searchObservable = this.vaultServiceApi.searchCatalogBrands(this.configService.systemConfig$.apiMode!, this.filter);\n    searchObservable.subscribe(wrapper => {\n        console.log(\"search sources\", wrapper);\n        // this.searchResults = wrapper.hits.hits;\n        this.resultLimits.totalItems = wrapper?.hits?.total.value || 0;\n\n        this.lighthouseBrandList = this.lighthouseBrandList.concat((wrapper?.hits?.hits || []).map((result) => {\n          return {\n            brand: result._source,\n            searchHighlights: result?.highlight?.aliases || []\n          }\n        }))\n\n        //check if scroll is complete.\n        if(!wrapper?.hits || !wrapper?.hits?.hits || wrapper?.hits?.hits?.length == 0 || wrapper?.hits?.total?.value == wrapper?.hits?.hits?.length){\n          console.log(\"SCROLL_COMPLETE!@@@@@@@@\")\n          this.resultLimits.scrollComplete = true;\n        } else {\n          //change the current Page (but don't cause a new query)\n          console.log(\"SETTING NEXT SORT KEY:\", wrapper.hits.hits[wrapper.hits.hits.length - 1].sort.join(','))\n          this.filter.searchAfter = wrapper.hits.hits[wrapper.hits.hits.length - 1].sort.join(\",\")\n        }\n        this.loading = false\n      },\n      error => {\n        this.loading = false\n        console.error(\"sources FAILED\", error)\n      },\n      () => {\n        this.loading = false\n        console.log(\"sources finished\")\n      }\n    );\n    return searchObservable;\n  }\n\n  onScroll() {\n    if(!this.resultLimits.scrollComplete) {\n      this.querySources(false)\n    }\n  }\n\n  private resetSearch(){\n    console.log(\"reset search...\")\n    this.lighthouseBrandList = []\n    this.filter.searchAfter = []\n    this.resultLimits = {\n      totalItems: 0,\n      scrollComplete: false,\n      platformTypesBuckets: undefined,\n      categoryBuckets: undefined\n    }\n  }\n\n  public selectBrand(brandItem?: LighthouseBrandListDisplayItem){\n\n    this.configService.searchConfig$.selectedBrand = brandItem\n    this.navOutletService.navigateByUrl(NavOutletPageName.HealthSystemBrandDetails)\n    // this.messageBus.componentNavigationSubject.next({\n    //   page: ComponentNavPage.PortalConnect,\n    //   title: brandItem.name,\n    //   data: brandItem,\n    // } as ComponentNavigationEvent)\n  }\n}\n","<!-- Step: SEARCH VIEW -->\n<div id=\"step-search\" class=\"space-y-6\">\n  <div class=\"relative flex justify-center items-center\">\n    <button [navOutletLink]=\"'dashboard'\"  type=\"button\" id=\"search-back\"\n            class=\"absolute left-0 top-1/2 -translate-y-1/2 text-gray-700 p-2 hover:bg-gray-100 rounded-md\">\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\n      </svg>\n    </button>\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n  <div class=\"flex gap-2\">\n    <div class=\"flex-1\">\n      <input id=\"search-input\" type=\"text\" placeholder=\"Search for your health system...\"\n             [(ngModel)]=\"filter.query\"\n             (keyup)=\"querySources(true)\"\n             class=\"w-full block px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20\" />\n    </div>\n    <button (click)=\"this.showFilters = !this.showFilters\" id=\"search-filters\" class=\"border border-gray-200 rounded-lg w-10 h-10 flex items-center justify-center hover:border-[#5B47FB] hover:bg-[#5B47FB]/5 transition-all\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n           stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n           class=\"lucide lucide-filter w-5 h-5\">\n        <polygon points=\"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\" />\n      </svg>\n    </button>\n  </div>\n\n  <!-- Filter container -->\n  <div *ngIf=\"showFilters\" id=\"filters-container\" class=\"space-y-4 p-4 border rounded-lg\">\n    <h3 class=\"font-semibold text-lg\">Filters</h3>\n\n    <!-- State filter -->\n    <div class=\"relative\">\n      <label class=\"block text-sm font-medium mb-1\">State</label>\n      <button type=\"button\" id=\"state-filter-btn\"\n              class=\"w-full flex items-center justify-between px-3 py-2 text-sm border rounded-md bg-white hover:bg-gray-50\">\n        <span id=\"state-filter-value\">All States</span>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n             stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n             class=\"h-4 w-4 opacity-50\">\n          <polyline points=\"6 9 12 15 18 9\" />\n        </svg>\n      </button>\n      <div id=\"state-filter-menu\" class=\"absolute z-10 w-full mt-1 rounded-md border bg-white shadow-lg hidden\">\n        <div class=\"py-1\">\n          <button class=\"w-full text-left px-3 py-2 text-sm hover:bg-gray-100 flex items-center justify-between\">\n            <span>All States</span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4 text-[#5B47FB]\">\n              <polyline points=\"20 6 9 17 4 12\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n  <!-- Search results container -->\n  <div class=\"space-y-2 overflow-scroll\" style=\"max-height:500px\" id=\"search-results\"\n       infiniteScroll\n       [infiniteScrollDistance]=\"2\"\n       [infiniteScrollThrottle]=\"50\"\n       [scrollWindow]=\"false\"\n       (scrolled)=\"onScroll()\"\n  >\n\n    <button *ngFor=\"let brand of lighthouseBrandList\" type=\"button\"\n            (click)=\"selectBrand(brand.brand)\"\n            class=\"w-full flex items-center gap-3 p-3 border rounded-lg hover:border-[#5B47FB]/30 hover:shadow-sm transition-all text-left focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20\">\n      <img imageFallback src=\"https://cdn.fastenhealth.com/logos/sources/{{brand?.brand?.id}}.png\" alt=\"{{brand?.brand?.name}}\" class=\"w-8 max-h-8 rounded\">\n      <div class=\"flex-1 min-w-0\">\n        <p class=\"font-semibold\">{{brand?.brand?.name}}</p>\n        <p *ngIf=\"(brand?.searchHighlights || []).length > 0\" class=\"text-sm text-gray-600\">Found match(es):\n          <span *ngFor=\"let highlight of brand?.searchHighlights\" [innerHTML]=\"highlight | safeHtml\"></span>\n        </p>\n        <p class=\"text-sm text-gray-600\">\n          <span *ngFor=\"let stateCode of brand?.brand.locations | slice:0:3;\">{{stateCode | stateName}}</span>\n          <span *ngIf=\"brand?.brand.locations.length > 4\">+ {{brand?.brand.locations.length}}</span>\n        </p></div>\n      <div class=\"flex items-center\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n             stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n             class=\"w-5 h-5 text-gray-400\">\n          <polyline points=\"9 6 15 12 9 18\"></polyline>\n        </svg>\n      </div>\n    </button>\n\n  </div>\n\n  <div *ngIf=\"!loading && lighthouseBrandList.length == 0\" class=\"space-y-4\">\n\n    <div class=\"mt-8 p-4 bg-gray-50 rounded-lg space-y-4\">\n      <div class=\"flex items-center gap-2 text-gray-700\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-5 h-5\">\n          <circle cx=\"11\" cy=\"11\" r=\"8\"/>\n          <path d=\"m21 21-4.3-4.3\"/>\n        </svg>\n        <span class=\"font-medium\">No results found</span>\n      </div>\n      <p class=\"text-sm text-gray-600\">\n        We couldn't find any health systems matching your search\n      </p>\n      <button [navOutletLink]=\"'form-support-request'\"  class=\"w-full bg-white border border-gray-200 text-[#5B47FB] hover:bg-[#5B47FB] hover:text-white hover:border-[#5B47FB] font-medium py-2 px-4 rounded-md transition-colors\">\n        Request this health system\n      </button>\n    </div>\n  </div>\n</div>\n<!-- End Step: SEARCH VIEW -->\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {VaultService} from '../../services/vault.service';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../../app.routing';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\n\n@Component({\n  selector: 'app-identity-verification',\n  templateUrl: './identity-verification.component.html',\n  styleUrls: ['./identity-verification.component.scss']\n})\nexport class IdentityVerificationComponent implements OnInit, NavOutletPage {\n  loading = false;\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    private vaultService: VaultService,\n    private navOutletService: NavOutletService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n\n  verifyIdentity(){\n    this.loading = true\n    this.vaultService.verificationWithPopup().subscribe((result)=>{\n      this.loading = false\n      console.log(\"verification result\", result)\n      this.navOutletService.navigateByUrl(NavOutletPageName.Dashboard)\n    }, (err)=>{\n      this.loading = false\n      console.error(\"verification error\", err)\n    })\n  }\n}\n","<!-- Step: VERIFICATION -->\n<div class=\"space-y-6 text-center\">\n  <div class=\"flex justify-center items-center\">\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n  <div class=\"space-y-2\">\n    <h2 class=\"text-xl font-semibold\">\n      Verify your identity<br/>just once\n    </h2>\n    <p id=\"verification-hint\" class=\"text-sm text-gray-600\">\n      Your leaving Acme Labs to verify your identity with our partner,\n      <img src=\"data:image/svg+xml,%3Csvg fill='none' height='129' viewBox='0 0 477 129' width='477' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23041a55'%3E%3Cpath d='m43.6629 11.002c.8485.6349 1.9184.971 2.9513.971.2952 0 .5903-.0373.8485-.0747 2.8038-.4855 4.6483-3.17438 4.2056-5.97532-.2213-1.34445-.9591-2.57686-2.0659-3.36113-2.2503-1.755252-5.4599-1.3071-7.1938.97099-1.7338 2.2781-1.2911 5.52719.9592 7.28246.1107.0747.1845.112.2951.1867z'/%3E%3Cpath d='m81.3643 11.4122c.7009.3735 1.5126.5602 2.2873.5602.5533 0 1.1067-.112 1.6232-.2987 2.7299-.9337 4.1687-3.92135 3.2464-6.6476-.4427-1.3071-1.365-2.39013-2.5824-2.98766-2.5455-1.307108-5.6812-.22408-6.9355 2.35279-1.2543 2.57686-.1845 5.71387 2.361 7.02097z'/%3E%3Cpath d='m115.228 23.811c-2.73-.859-5.644.6722-6.493 3.4358-.848 2.7636.664 5.7139 3.394 6.5729.517.1494 1.033.2241 1.55.2241.848 0 1.66-.2241 2.398-.5976 2.545-1.3444 3.504-4.4815 2.213-7.0584-.664-1.2324-1.734-2.166-3.062-2.5768z'/%3E%3Cpath d='m129.284 61.271c-1.697-2.3155-4.943-2.801-7.267-1.0457-2.325 1.7552-2.767 5.0043-1.033 7.3571 1.697 2.3155 4.943 2.801 7.267 1.0457 1.107-.8216 1.808-2.054 2.029-3.4358.185-1.3818-.184-2.8009-.996-3.9213z'/%3E%3Cpath d='m113.642 94.7637h-.073c-2.952.1494-5.239 2.6515-5.091 5.6393.11 2.801 2.361 5.079 5.164 5.154h.111c2.951-.15 5.239-2.652 5.091-5.6396-.111-2.8009-2.361-5.079-5.165-5.1537z'/%3E%3Cpath d='m86.6756 117.959c-2.3242-1.681-5.5706-1.121-7.2307 1.232s-1.1067 5.639 1.2174 7.32c2.3242 1.68 5.5706 1.12 7.2307-1.233.8116-1.12 1.1067-2.539.8854-3.921-.2214-1.382-.9961-2.577-2.1028-3.398z'/%3E%3Cpath d='m44.9511 117.36c-2.6562.934-4.095 3.847-3.1727 6.536.7009 2.091 2.6193 3.473 4.7959 3.473.5533 0 1.0698-.112 1.6232-.262 2.693-.784 4.2794-3.622 3.5046-6.348-.7747-2.727-3.5784-4.333-6.2715-3.548-.1475.037-.332.112-.4795.149z'/%3E%3Cpath d='m18.1691 95.1782c-2.73-.859-5.6444.6722-6.4929 3.4358-.8485 2.764.6641 5.714 3.394 6.573.5165.149 1.033.224 1.5495.224 2.8775 0 5.2016-2.39 5.1647-5.266 0-2.2779-1.4756-4.2946-3.6153-4.9668z'/%3E%3Cpath d='m2.08517 60.1841c-2.287253 1.7179-2.766839 5.0043-1.06984 7.3198 1.69699 2.3154 4.94342 2.8009 7.23068 1.083 2.28729-1.7179 2.76679-5.0043 1.06984-7.3198-1.69699-2.3154-4.94342-2.8009-7.23068-1.083z'/%3E%3Cpath d='m16.6203 34.0467h.0738c2.8406-.1121 5.0541-2.5769 4.9434-5.4525-.1106-2.7263-2.2872-4.9297-5.0172-5.0044h-.0369c-2.8775.1121-5.0909 2.5769-4.9434 5.4899.1107 2.6889 2.2873 4.8923 4.9803 4.967z'/%3E%3Cpath d='m33.2966 28.8178c.8854.6349 1.9183.971 2.9882.971.2951 0 .5902-.0373.8854-.0747 2.8037-.4854 4.722-3.2117 4.2425-6.05-.4796-2.8383-3.1727-4.7802-5.9764-4.2947-1.365.224-2.5455 1.0083-3.3571 2.1287-1.6601 2.3528-1.1068 5.6392 1.2174 7.3197z'/%3E%3Cpath d='m62.7334 19.4403c.7009.3735 1.4756.5602 2.2873.5602.5533 0 1.1067-.112 1.6232-.2988 2.7299-.8963 4.1687-3.8839 3.2833-6.6102-.8854-2.7636-3.8367-4.22008-6.5298-3.32378-2.7299.89628-4.1687 3.88398-3.2833 6.61018v.0374c.4427 1.3071 1.4019 2.3901 2.6193 3.025z'/%3E%3Cpath d='m91.9153 29.3014c.5165.1493 1.033.224 1.5495.224 2.8775 0 5.1648-2.3528 5.2017-5.2284 0-2.913-2.3242-5.2284-5.1648-5.2658-2.8776 0-5.1648 2.3528-5.2017 5.2285-.0369 2.3154 1.4388 4.3694 3.6153 5.0417z'/%3E%3Cpath d='m110.584 54.1341c.258.0373.516.0747.775.0747 2.877 0 5.164-2.3528 5.164-5.2284 0-2.913-2.324-5.2284-5.164-5.2284-2.878 0-5.165 2.3527-5.165 5.2284 0 2.5395 1.881 4.7429 4.39 5.1537z'/%3E%3Cpath d='m111.431 85.0958c2.878-.1121 5.091-2.5769 4.943-5.4899-.11-2.7262-2.287-4.9296-5.017-5.0043h-.074c-2.877.112-5.091 2.5768-4.943 5.4898.111 2.7263 2.287 4.9297 5.017 5.0044z'/%3E%3Cpath d='m96.4542 100.41c-2.3242-1.6807-5.5706-1.1205-7.2307 1.232-1.6601 2.353-1.1068 5.639 1.2174 7.32 2.3241 1.681 5.5706 1.12 7.2307-1.232 1.6601-2.39 1.1067-5.677-1.2174-7.32z'/%3E%3Cpath d='m63.5095 109.035c-2.7299.934-4.2056 3.959-3.2464 6.723.7009 2.128 2.6931 3.547 4.9065 3.585.5534 0 1.1068-.112 1.6601-.262 2.6931-1.083 4.0212-4.145 2.9513-6.871-.996-2.54-3.6891-3.884-6.3084-3.137z'/%3E%3Cpath d='m41.3006 102.46c-.6271-1.232-1.7339-2.166-3.0251-2.5768-2.7299-.8589-5.6443.6718-6.4928 3.4358s.664 5.714 3.394 6.573c.4796.149 1.0329.224 1.5494.224 2.2504 0 4.2794-1.494 4.9434-3.697.4058-1.27.2583-2.726-.3689-3.959z'/%3E%3Cpath d='m19.7189 74.7486c-2.7668-.4854-5.423 1.3818-5.9394 4.1828-.4796 2.8009 1.3649 5.4898 4.1318 6.0127.1106 0 .1844.0373.2951.0373.2582.0374.5165.0374.7378.0747 1.1068 0 2.1766-.3735 3.0251-1.0457 2.2504-1.7179 2.7299-4.967 1.033-7.2451-.7379-1.083-1.9553-1.8299-3.2834-2.0167z'/%3E%3Cpath d='m18.9065 43.6758h-.0738c-2.8775.112-5.091 2.5768-4.9434 5.4898.1107 2.7263 2.2872 4.9297 5.0172 5.0044h.0738c2.8775-.1121 5.091-2.5769 4.9434-5.4899-.1476-2.7262-2.3241-4.8923-5.0172-5.0043z'/%3E%3Cpath d='m49.601 25.4901c-1.6601 2.3528-1.0698 5.6392 1.2543 7.3197 2.3241 1.6806 5.5706 1.0831 7.2307-1.2697s1.0698-5.6392-1.2543-7.3198c-1.1068-.7843-2.5086-1.1204-3.8367-.8963-1.4019.2614-2.6193 1.0083-3.394 2.1661z'/%3E%3Cpath d='m71.2566 30.0466c.7379 2.2034 2.7669 3.6972 5.091 3.6972.5903 0 1.1437-.112 1.697-.2988 2.8038-.9336 4.3163-3.996 3.394-6.8343-1.1436-2.7636-4.2794-4.108-7.0093-2.9503-2.5086 1.0457-3.8367 3.772-3.1727 6.3862z'/%3E%3Cpath d='m99.5521 44.0186c.8489-2.7636-.6641-5.7139-3.394-6.5729-2.73-.8589-5.6444.6723-6.4929 3.4359-.8484 2.7635.6641 5.7139 3.394 6.5728.5165.1494 1.033.2614 1.5495.2614 2.2503-.0373 4.2424-1.5311 4.9434-3.6972z'/%3E%3Cpath d='m98.8491 60.2993c-2.2873 1.7179-2.7669 4.967-1.0699 7.2451.8117 1.1204 2.0291 1.83 3.3938 2.0541.258.0373.517.0747.775.0747 1.107 0 2.177-.3735 3.025-1.0084 2.324-1.6432 2.914-4.8549 1.291-7.2077s-4.796-2.9504-7.1198-1.3071c-.1107 0-.1844.0746-.2951.1493z'/%3E%3Cpath d='m90.9561 82.8168c-2.0659 2.1287-2.029 5.5646.0738 7.6559.996 1.0084 2.361 1.5312 3.726 1.5312h.0738c2.9513-.2241 5.1647-2.8009 4.9434-5.7886-.1845-2.6889-2.3242-4.8176-4.9803-5.0044h-.0738c-1.4019 0-2.7668.5976-3.7629 1.6059z'/%3E%3Cpath d='m80.59 103.394c1.6601-2.353 1.1068-5.6395-1.2174-7.3201-2.3241-1.6806-5.5706-1.1204-7.2307 1.2324s-1.1067 5.6397 1.2543 7.3197c.8854.635 1.9184.971 2.9882.971.2952 0 .5903-.037.8854-.075 1.3281-.224 2.5455-.971 3.3202-2.128z'/%3E%3Cpath d='m58.7517 98.5022c-.9223-2.7636-3.8367-4.2201-6.5666-3.2864-2.73.9336-4.1687 3.884-3.2464 6.6472.7009 2.129 2.693 3.586 4.9065 3.586.5534 0 1.1067-.075 1.6232-.262 2.6931-.971 4.1687-3.921 3.2833-6.6848z'/%3E%3Cpath d='m37.1682 81.5446c-1.2912-.4109-2.7299-.2988-3.9473.3734-2.5455 1.3445-3.5047 4.5189-2.1766 7.0957.6271 1.2324 1.7339 2.1287 3.0251 2.5769.5164.1494 1.0329.2241 1.5494.2241 2.8406 0 5.1648-2.3155 5.2017-5.1911 0-2.3528-1.4757-4.3695-3.6523-5.079z'/%3E%3Cpath d='m33.5524 65.154c.4058-2.8756-1.5494-5.5271-4.39-5.9379-2.8406-.4109-5.4599 1.5685-5.8657 4.4441-.1845 1.3818.1476 2.7636.9592 3.884 1.697 2.3154 4.9434 2.8009 7.2306 1.083 1.1437-.8216 1.8815-2.0914 2.0659-3.4732z'/%3E%3Cpath d='m35.7285 36.8438h-.0737c-2.8776 0-5.1648 2.3901-5.1648 5.2657s2.361 5.2284 5.2016 5.2284h.0738c2.8407-.112 5.0541-2.5768 4.9434-5.4525-.0737-2.7636-2.2503-4.9296-4.9803-5.0416z'/%3E%3C/g%3E%3Cpath d='m181.378 64.1812c0-14.9383 11.251-26.3288 25.971-26.3288 9.186-.0747 17.745 4.7429 22.504 12.735l-8.596 5.4898c-2.582-5.3405-7.968-8.6642-13.834-8.5149-9.297 0-16.122 7.3572-16.122 16.6189 0 9.0377 6.752 16.5443 15.974 16.5443 6.235.112 11.953-3.6226 14.388-9.4859l8.964 4.855c-4.353 8.9256-13.391 14.5275-23.241 14.4155-15.31-.0374-26.008-11.8013-26.008-26.3289z' fill='%23000'/%3E%3Cpath d='m248.742 38.5605v51.2012h33.239v-9.5979h-23.389v-41.6033z' fill='%23000'/%3E%3Cpath d='m301.241 38.5605v51.2012h34.087v-9.3738h-24.274v-11.6519h19.773v-9.3365h-19.773v-11.5025h24.274v-9.3365z' fill='%23000'/%3E%3Cpath d='m372.478 38.5605-19.147 51.2386h10.072l3.32-9.3365h21.175l3.321 9.3365h10.071l-19.147-51.2386zm4.87 12.5482 7.304 20.3909h-14.646z' fill='%23000'/%3E%3Cpath d='m429.398 47.6729v16.9177h9.997c6.456 0 9.444-4.0707 9.444-8.6269 0-5.0043-3.209-8.2908-9.444-8.2908zm-9.813-9.1124h20.548c11.658 0 18.593 7.5813 18.593 17.3285.148 6.3488-3.32 12.2121-8.89 15.1624l9.997 18.7477h-10.957l-8.116-16.1335h-11.362v16.1335h-9.776v-51.2386z' fill='%23000'/%3E%3Cpath d='m465.516 43.305c0-2.5769 2.029-4.6683 4.575-4.6683 2.545 0 4.611 2.054 4.611 4.6309s-2.029 4.6682-4.537 4.6682c-2.472.0747-4.538-1.9046-4.649-4.4068 0-.0747 0-.1494 0-.224zm8.264 0c-.074-2.0167-1.734-3.6226-3.726-3.5479s-3.578 1.7552-3.505 3.7719c.074 1.9794 1.66 3.5479 3.616 3.5479 1.992 0 3.578-1.6432 3.578-3.6599 0-.0374 0-.0747 0-.112zm-2.619.4108 1.143 1.9793h-1.07l-1.069-1.8673h-.738v1.8673h-.922v-4.855h1.807c.812 0 1.734.2988 1.734 1.4565.037.6349-.332 1.2324-.922 1.4565zm-.923-2.0541h-.774v1.3818h.811c.591 0 .812-.2987.812-.7095s-.332-.6723-.922-.6723z' fill='%23000'/%3E%3C/svg%3E\"\n           style=\"height: 1.25rem;display: inline; vertical-align: bottom;\"/>.\n      This one-time step will bring you right back after your ID has been verified.\n    </p>\n  </div>\n\n\n  <div class=\"space-y-2\">\n    <button (click)=\"verifyIdentity()\"\n      [disabled]=\"loading\"\n      type=\"button\" class=\"w-full bg-[#5B47FB] hover:bg-[#4936E8] text-white font-medium py-2.5 px-4 rounded-md flex justify-center items-center\">\n      <app-spinner *ngIf=\"loading\"></app-spinner>\n      Continue\n    </button>\n  </div>\n</div>\n<!-- End Step: VERIFICATION -->\n","import {ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../../app.routing';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\nimport {map, takeWhile, timer} from 'rxjs';\n\n@Component({\n  selector: 'app-vault-profile-signin-code',\n  templateUrl: './vault-profile-signin-code.component.html',\n  styleUrls: ['./vault-profile-signin-code.component.scss']\n})\nexport class VaultProfileSigninCodeComponent implements OnInit, NavOutletPage {\n  loading: boolean = false\n  errorMsg: string = \"\"\n\n  @Input() currentEmail = \"test@example.com\"\n\n  codeExpirySeconds = 300;\n  timeRemaining$ = timer(0, 1000).pipe(\n    map(n => (this.codeExpirySeconds - n) * 1000),\n    takeWhile(n => n >= 0),\n  );\n\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    private navOutletService: NavOutletService,\n    private authService: AuthService,\n  ) {}\n\n  ngOnInit(): void {\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n\n  onCodeCompleted(code: string){\n    this.loading = true\n\n    console.log(\"submit finish\", this.currentEmail, code)\n    this.authService.VaultAuthFinish(this.currentEmail, code)\n      .then(() => {\n        this.loading = false\n        //this will attempt to redirect to Dashboard, then fallback to ID verification if not provided\n        this.navOutletService.navigateByUrl(NavOutletPageName.Dashboard)\n      })\n      .catch((err)=>{\n        console.error(err)\n        this.loading = false\n        if(err?.name){\n          this.errorMsg = \"code is incorrect\"\n        } else{\n          this.errorMsg = \"an unknown error occurred during sign-in\"\n        }\n        // const toastNotification = new ToastNotification()\n        // toastNotification.type = ToastType.Error\n        // toastNotification.message = this.errorMsg\n        // this.toastService.show(toastNotification)\n      })\n  }\n\n}\n","<!-- Step: VERIFICATION -->\n<div class=\"space-y-6 text-center\">\n  <div class=\"flex justify-center items-center\">\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n  <div class=\"space-y-2\">\n    <h2 class=\"text-xl font-semibold\">\n      Enter authentication code<br />from your email\n    </h2>\n    <p id=\"verification-hint\" class=\"text-sm text-gray-600\">\n      A code was sent to <span>{{currentEmail}}</span>\n    </p>\n  </div>\n\n  <div class=\"flex justify-center space-x-2\" id=\"verification-inputs\">\n    <code-input [isCodeHidden]=\"false\"\n                [codeLength]=\"6\"\n                (codeCompleted)=\"onCodeCompleted($event)\">\n    </code-input>\n  </div>\n\n  <p *ngIf=\"errorMsg\" id=\"verification-error\" class=\"text-sm text-red-500\">{{errorMsg}}</p>\n\n  <div class=\"text-sm text-gray-600\">\n    Code expires in\n    <span id=\"verification-countdown\" class=\"font-semibold text-gray-900\">{{timeRemaining$ | async | date:'mm:ss'}}</span>\n  </div>\n\n  <div class=\"space-y-2\">\n    <button type=\"button\" id=\"resend-code\"\n            class=\"verification-button\">\n      Re-send code\n    </button>\n    <button type=\"button\" id=\"use-other-method\"\n            style=\"display:none;\"\n            class=\"verification-button\">\n      Use another verification method\n    </button>\n  </div>\n</div>\n<!-- End Step: VERIFICATION -->\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {VaultProfile} from '../../models/fasten/vaultProfile';\nimport {AuthService} from '../../services/auth.service';\nimport {NavOutletService} from '../../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../../app.routing';\nimport {NavOutletPage} from '../../models/nav-outlet-page';\nimport {ConfigService} from '../../services/config.service';\n\n@Component({\n  selector: 'app-auth-signin',\n  templateUrl: './vault-profile-signin.component.html',\n  styleUrls: ['./vault-profile-signin.component.scss']\n})\nexport class VaultProfileSigninComponent implements OnInit, NavOutletPage {\n  loading: boolean = false\n  showMessage: boolean = false\n\n  submitted: boolean = false\n  existingVaultProfile: VaultProfile = new VaultProfile()\n  errorMsg: string = \"\"\n  message: string = \"\"\n\n  constructor(\n    public changeRef: ChangeDetectorRef,\n    public configService: ConfigService,\n    private authService: AuthService,\n    private navOutletService: NavOutletService,\n  ) { }\n\n  ngOnInit(): void {\n    const urlParams = new URLSearchParams(window.location.search);\n    this.setMessage(urlParams.get('action') || \"\")\n  }\n  markForCheck(){\n    this.changeRef.markForCheck()\n  }\n\n  signinSubmit(){\n    this.submitted = true;\n    this.loading = true\n\n    console.log(\"Signin\", this.existingVaultProfile.email)\n    this.authService.VaultAuthBegin(this.existingVaultProfile.email!)\n      .then(() => {\n        this.loading = false\n        this.navOutletService.navigateByUrl( NavOutletPageName.VaultProfileSigninCode, new Map<string,any>([[\"currentEmail\", this.existingVaultProfile.email]]))\n      })\n      .catch((err)=>{\n        this.loading = false\n        if(err?.name){\n          this.errorMsg = \"email or password is incorrect\"\n        } else{\n          this.errorMsg = \"an unknown error occurred during sign-in\"\n        }\n        // const toastNotification = new ToastNotification()\n        // toastNotification.type = ToastType.Error\n        // toastNotification.message = this.errorMsg\n        // this.toastService.show(toastNotification)\n      })\n  }\n\n  setMessage(action: string) {\n    if (action === \"email-changed\"){\n      this.showMessage = true;\n      this.message = \"Email successfully changed! Please sign in with your new email.\";\n    } else if (action === \"password-changed\"){\n      this.showMessage = true;\n      this.message = \"Password successfully changed! Please sign in with your new password.\";\n    }\n  }\n}\n","<!-- Step: INITIAL -->\n<div id=\"step-initial\" class=\"space-y-6\">\n  <div class=\"flex justify-center items-center\">\n    <h1 class=\"az-logo\">fasten</h1>\n  </div>\n\n  <div class=\"flex items-center justify-center space-x-4\">\n    <div class=\"w-10 h-10 text-[#5B47FB]\">\n      <img imageFallback=\"unknown-organization\" [src]=\"(configService.systemConfigSubject | async).org?.logo_uri\" alt=\"Organization Logo\" class=\"w-10 h-10 rounded-lg\"/>\n    </div>\n\n    <div class=\"flex space-x-1\">\n      <div class=\"w-2 h-2 bg-[#5B47FB] rounded-full animate-pulse-flow delay-100\"></div>\n      <div class=\"w-2 h-2 bg-[#5B47FB] rounded-full animate-pulse-flow delay-200\"></div>\n      <div class=\"w-2 h-2 bg-[#5B47FB] rounded-full animate-pulse-flow delay-300\"></div>\n    </div>\n\n    <svg id='connecting-system-logo-placeholder' xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' ><path d='M12 6v4'/><path d='M14 14h-4'/><path d='M14 18h-4'/><path d='M14 8h-4'/><path d='M18 12h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h2'/><path d='M18 22V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v18'/></svg>\n  </div>\n\n  <div class=\"text-center space-y-2\">\n    <h2 class=\"text-xl font-bold\">Connect Your Health Records</h2>\n    <p class=\"text-sm text-gray-600\">\n      {{(configService.systemConfigSubject | async).org?.name || 'Unknown'}} uses Fasten to securely link your health systems\n    </p>\n  </div>\n\n  <div class=\"space-y-4\">\n    <!-- Safe Card -->\n    <div class=\"flex items-start space-x-4 p-4 border rounded-lg hover:shadow-sm transition-shadow hover:border-[#5B47FB]/30\">\n      <div class=\"p-2 bg-purple-50 rounded-full\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n             stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n             class=\"lucide lucide-shield w-5 h-5 text-[#5B47FB]\">\n          <path d=\"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01\n                C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1\n                c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0\n                C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z\" />\n        </svg>\n      </div>\n      <div>\n        <h3 class=\"font-semibold\">Safe</h3>\n        <p class=\"text-sm text-gray-600\">\n          Securely connect your medical records with bank-level encryption\n        </p>\n      </div>\n    </div>\n\n    <!-- Private Card -->\n    <div class=\"flex items-start space-x-4 p-4 border rounded-lg hover:shadow-sm transition-shadow hover:border-[#5B47FB]/30\">\n      <div class=\"p-2 bg-purple-50 rounded-full\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-lock w-5 h-5 text-[#5B47FB]\"><rect width=\"18\" height=\"11\" x=\"3\" y=\"11\" rx=\"2\" ry=\"2\"/><path d=\"M7 11V7a5 5 0 0 1 10 0v4\"/></svg>\n      </div>\n      <div>\n        <h3 class=\"font-semibold\">Private</h3>\n        <p class=\"text-sm text-gray-600\">\n          We never sell your personal info and only use it with your\n          permission\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <form (ngSubmit)=\"signinSubmit()\" #vaultProfileForm=\"ngForm\" class=\"space-y-6\">\n    <label class=\"block text-sm font-medium text-gray-700\">Email address</label>\n    <input [(ngModel)]=\"existingVaultProfile.email\" name=\"email\" #email=\"ngModel\" required email minlength=\"4\" type=\"email\" placeholder=\"you@example.com\"\n           class=\"block w-full mt-2 px-3 py-2 text-base rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#5B47FB] focus:ring-opacity-20\"/>\n    <p id=\"initialError\" class=\"text-sm text-red-500\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n        <span *ngIf=\"email.errors?.['required']\">\n          Email is required.\n        </span>\n      <span *ngIf=\"email.errors?.['minlength']\">\n          Email must be at least 4 characters long.\n        </span>\n      <span *ngIf=\"email.errors?.['email']\">\n          Email must be a valid email address.\n        </span>\n      <span *ngIf=\"errorMsg\" class=\"alert alert-danger mt-3\" role=\"alert\">\n          <strong>Error</strong> {{errorMsg}}\n        </span>\n    </p>\n\n    <p class=\"text-xs text-gray-400 text-center\">\n      By clicking continue you agree to Fasten's\n      <a href=\"https://policy.fastenhealth.com/connect/privacy_policy.html\" class=\"text-gray-500 hover:text-gray-600 underline\" target=\"_blank\">Privacy Policy</a>\n      and {{(configService.systemConfigSubject | async).org?.name || 'Unknown'}}'s\n      <a href=\"{{(configService.systemConfigSubject | async).org?.privacy_policy_uri}}\" class=\"text-gray-500 hover:text-gray-600 underline\" target=\"_blank\">Privacy Policy</a>\n    </p>\n\n    <button type=\"submit\"\n      [disabled]=\"!vaultProfileForm.form.valid || loading\"\n      class=\"w-full bg-[#5B47FB] hover:bg-[#4936E8] text-white font-medium py-2.5 px-4 rounded-md flex justify-center items-center\">\n      <app-spinner *ngIf=\"loading\"></app-spinner>\n      Continue\n    </button>\n\n  </form>\n</div>\n<!-- End Step: INITIAL -->\n\n<!--<section class=\"step-panel showing\" id=\"step-initial\">-->\n<!--  <div class=\"brand-header brand-fast\">-->\n<!--    <h1 class=\"brand-title\">fasten</h1>-->\n<!--  </div>-->\n<!--  <div class=\"initial-view-content\">-->\n<!--    <div class=\"logos-row\">-->\n<!--      <div class=\"medical-logo\">-->\n<!--        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\">-->\n<!--          <rect width=\"40\" height=\"40\" rx=\"8\" fill=\"#5B47FB\"></rect>-->\n<!--          <path d=\"M20 12V28M12 20H28\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\"-->\n<!--                stroke-linejoin=\"round\"></path>-->\n<!--          <path d=\"M12 12L28 28M28 12L12 28\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\"-->\n<!--                stroke-linejoin=\"round\" opacity=\"0.2\"></path>-->\n<!--        </svg>-->\n<!--      </div>-->\n<!--      <div class=\"bubbles-row\">-->\n<!--        <div class=\"bubble\"></div>-->\n<!--        <div class=\"bubble\"></div>-->\n<!--        <div class=\"bubble\"></div>-->\n<!--      </div>-->\n<!--      <div class=\"clearbit-logo-container\">-->\n<!--        <img src=\"assets/images/banner-transparent-trim.png\" alt=\"Fasten Connect\" class=\"clearbit-logo\" />-->\n<!--      </div>-->\n<!--    </div>-->\n\n<!--    <h2 class=\"title-large\">Connect Your Health Records</h2>-->\n<!--    <p class=\"paragraph\">Acme Labs uses Fasten to securely link your health systems</p>-->\n\n<!--    <div class=\"info-cards\">-->\n<!--      <div class=\"info-card\">-->\n<!--        <div class=\"info-card-icon\">-->\n<!--          <div class=\"icon-wrapper bg-brand-purple-faded\">-->\n<!--            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon-shield\" viewBox=\"0 0 24 24\" fill=\"none\">-->\n<!--              <path d=\"M12 2L3 5V11C3 16.52 7.03 21.75 12 23C16.97 21.75 21 16.52 21 11V5L12 2Z\" stroke=\"#5B47FB\"-->\n<!--                    stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />-->\n<!--            </svg>-->\n<!--          </div>-->\n<!--        </div>-->\n<!--        <div>-->\n<!--          <h3 class=\"info-title\">Safe</h3>-->\n<!--          <p class=\"info-desc\">-->\n<!--            Securely connect your medical records with bank-level encryption-->\n<!--          </p>-->\n<!--        </div>-->\n<!--      </div>-->\n\n<!--      <div class=\"info-card\">-->\n<!--        <div class=\"info-card-icon\">-->\n<!--          <div class=\"icon-wrapper bg-brand-purple-faded\">-->\n<!--            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon-lock\" viewBox=\"0 0 24 24\" fill=\"none\">-->\n<!--              <path-->\n<!--                d=\"M16 10V7C16 4.79 14.21 3 12 3C9.79 3 8 4.79 8 7V10M6 10H18C19.1 10 20 10.9 20 12V19C20 20.1 19.1 21 18 21H6C4.9 21 4 20.1 4 19V12C4 10.9 4.9 10 6 10Z\"-->\n<!--                stroke=\"#5B47FB\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />-->\n<!--            </svg>-->\n<!--          </div>-->\n<!--        </div>-->\n<!--        <div>-->\n<!--          <h3 class=\"info-title\">Private</h3>-->\n<!--          <p class=\"info-desc\">-->\n<!--            We never sell your personal info and only use it with your permission-->\n<!--          </p>-->\n<!--        </div>-->\n<!--      </div>-->\n<!--    </div>-->\n\n<!--    -->\n<!--  </div>-->\n<!--</section>-->\n\n<!--<div *ngIf=\"showMessage\" class=\"az-signin-message\">-->\n<!--  {{message}}-->\n<!--</div>-->\n\n\n<!--      <form (ngSubmit)=\"signinSubmit()\" #vaultProfileForm=\"ngForm\">-->\n<!--        <div class=\"form-group\">-->\n<!--          <label>Email</label>-->\n<!--          <input [(ngModel)]=\"existingVaultProfile.email\" name=\"email\" #email=\"ngModel\" required email minlength=\"4\" type=\"text\" class=\"form-control\" placeholder=\"Enter your email address\">-->\n\n\n<!--        </div>&lt;!&ndash; form-group &ndash;&gt;-->\n<!--        <button [disabled]=\"!vaultProfileForm.form.valid || loading\" type=\"submit\" class=\"btn btn-az-primary btn-block\">-->\n<!--          Continue-->\n<!--          <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>-->\n<!--        </button>-->\n\n<!--        <div *ngIf=\"errorMsg\" class=\"alert alert-danger mt-3\" role=\"alert\">-->\n<!--          <strong>Error</strong> {{errorMsg}}-->\n<!--        </div>-->\n<!--      </form>-->\n\n<!--    </div>&lt;!&ndash; az-signin-header &ndash;&gt;-->\n<!--  </div>&lt;!&ndash; az-card-signin &ndash;&gt;-->\n<!--</div>&lt;!&ndash; az-signin-wrapper &ndash;&gt;-->\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer:DomSanitizer){}\n\n  transform(value: any, args?: any): any {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n    // return this.sanitizer.bypassSecurityTrustStyle(style);\n    // return this.sanitizer.bypassSecurityTrustXxx(style); - see docs\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'stateName'\n})\nexport class StateNamePipe implements PipeTransform {\n  private stateCodes: { [key: string]: string } = {\n    \"ALL\": \"Nationwide\",\n    \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PA\": \"Pennsylvania\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\",\n    // Territories\n    \"AS\": \"American Samoa\",\n    \"DC\": \"District of Columbia\",\n    \"FM\": \"Federated States of Micronesia\",\n    \"GU\": \"Guam\",\n    \"MH\": \"Marshall Islands\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"PW\": \"Palau\",\n    \"PR\": \"Puerto Rico\",\n    \"VI\": \"Virgin Islands\",\n    // Armed Forces (AE includes Europe, Africa, Canada, and the Middle East)\n    \"AA\": \"Armed Forces Americas\",\n    \"AE\": \"Armed Forces Europe\",\n    \"AP\": \"Armed Forces Pacific\",\n  }\n\n  transform(value: string): unknown {\n    return this.stateCodes[value] || value;\n  }\n\n}\n","import {Directive, ElementRef, HostListener, Input, ViewContainerRef} from '@angular/core';\nimport {NavOutletService} from './nav-outlet.service';\n\n@Directive({\n  selector: '[navOutletLink]'\n})\nexport class NavOutletLinkDirective {\n\n  constructor(\n    private eleRef: ElementRef,\n    public navOutletService: NavOutletService\n  ) {}\n\n  @Input() navOutletLink: string = \"\"\n\n  @HostListener('click') onClick(){\n    this.navOutletService.navigateByUrl(this.navOutletLink)\n  }\n}\n","import {Component, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport {NavOutletDirective, } from './nav-outlet.directive';\nimport {NavOutletPageName, Routes, NavOutletRoute} from '../../app.routing';\nimport {NavOutletService} from './nav-outlet.service';\n\n@Component({\n  selector: 'app-nav-outlet',\n  templateUrl: './nav-outlet.component.html',\n  styleUrls: ['./nav-outlet.component.css']\n})\nexport class NavOutletComponent implements OnInit, OnChanges {\n  //location to dynamically load the resource list\n  @ViewChild(NavOutletDirective, {static: true}) navOutlet!: NavOutletDirective;\n\n  constructor(private navOutletService: NavOutletService) { }\n\n  ngOnInit(): void {\n    console.log(\"NavOutletComponent ngOnInit\")\n    this.loadComponent()\n\n    this.navOutletService.componentNavigationSubject.subscribe((componentNavEvent) => {\n      console.log(\"page navigation event detected in NavOutletComponent: \", componentNavEvent)\n      this.loadComponent(componentNavEvent)\n    })\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    this.loadComponent()\n  }\n\n  // WARNING: errors in this method will cause silent failures and limited error messages for some reason.\n  // it will also cause the ngOnInit subscribe functions to be ignored (subscription will be broken for all future calls)\n  loadComponent(pageRoute?: NavOutletRoute) {\n    try{\n      //clear the current outlet\n      const viewContainerRef = this.navOutlet.viewContainerRef;\n      viewContainerRef.clear();\n\n      if(pageRoute == null){\n        //find the default route\n        for(let route of Routes){\n          if(route.page == NavOutletPageName.Default){\n            pageRoute = route\n            break\n          }\n        }\n        if(pageRoute == null){\n          //throw if the default page not found\n          throw new Error(\"default page not found\")\n        }\n      }\n\n      const componentRef = viewContainerRef.createComponent(pageRoute.component);\n      if(pageRoute.inputs != null){\n        for(let [key, value] of pageRoute.inputs) {\n          componentRef.instance[key] = value\n        }\n      }\n      componentRef.instance.markForCheck()\n    } catch (e) {\n      console.error(\"NavOutletComponent loadComponent error\", e)\n    }\n\n  }\n}\n","<ng-template navOutletDirective></ng-template>\n","import {Directive, ViewContainerRef} from '@angular/core';\n\n@Directive({\n  selector: '[navOutletDirective]'\n})\nexport class NavOutletDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import {EnvironmentInjector, Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {NavOutletRoute, Routes} from '../../app.routing';\nimport {AuthService} from '../../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavOutletService {\n  // this subject is populated when the \"page\" is changed\n  public componentNavigationSubject = new BehaviorSubject<NavOutletRoute | null>(null)\n\n  constructor(\n    private authService: AuthService,\n    private injector: EnvironmentInjector\n  ) {}\n\n\n  reset(){\n    this.componentNavigationSubject.next(null)\n  }\n\n  navigateByUrl(nextPage: string, payload?: Map<string, any>) {\n    //remove the \"/\" prefix if present\n    nextPage = nextPage.trim()\n    if(nextPage.startsWith(\"/\")){\n      nextPage = nextPage.substring(1)\n    }\n\n\n    console.log('navigating to page: ', nextPage)\n\n    //find the component Route by nextPage\n    let foundRoute: NavOutletRoute = null;\n    for(let route of Routes) {\n      if(route.page == nextPage){\n        route.inputs = new Map()\n        //add the payload data to the route\n        //TODO: should we do a deep clone before?\n        if(payload != null && payload.size > 0){\n          route.inputs = payload\n        }\n        foundRoute = route\n        console.log(\"found route info: \", nextPage)\n        break;\n      }\n    }\n    if(foundRoute == null){\n      console.error(\"unknown page, could not route to: \", nextPage)\n      throw new Error(\"unknown page, could not route to: \" + nextPage)\n    }\n\n    //check if we can \"activate\" the new page\n    if(foundRoute.canActivate != null){\n      console.info(\"checking if we can activate the new page: \", foundRoute.page)\n      this.injector.runInContext(() => {\n        foundRoute.canActivate(foundRoute)\n          .then((cont) => {\n            if (!cont) {\n              return\n            }\n            this.componentNavigationSubject.next(foundRoute)\n          })\n          .catch(console.error)\n      })\n\n    } else {\n      this.componentNavigationSubject.next(foundRoute)\n    }\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {AuthService} from './auth.service';\nimport {environment} from '../../environments/environment';\nimport {NavOutletService} from '../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../app.routing';\n\n// based on https://stackoverflow.com/questions/46017245/how-to-handle-unauthorized-requestsstatus-with-401-or-403-with-new-httpclient\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService,\n    private navOutletService: NavOutletService\n  ) { }\n\n  private handleAuthError(err: HttpErrorResponse): Observable<any> {\n    //handle your auth error or rethrow\n    if (err.status === 401 || err.status === 403) {\n      //navigate /delete cookies or whatever\n      this.authService.Signout()\n      this.navOutletService.navigateByUrl(NavOutletPageName.VaultProfileSignin);\n      // if you've caught / handled the error, you don't want to rethrow it unless you also want downstream consumers to have to handle it as well.\n      return of(err.message); // or EMPTY may be appropriate here\n    }\n    return throwError(err);\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    console.log(\"Intercepting Request\", req)\n\n    //only intercept requests to the fasten API & lighthouse, all other requests should be sent as-is\n    let reqUrl = new URL(req.url)\n    let lighthouseUrl = new URL(environment.lighthouse_api_endpoint_base)\n    let apiUrl = new URL(environment.connect_api_endpoint_base)\n\n    if(\n      !((reqUrl.origin == apiUrl.origin && reqUrl.pathname.startsWith(apiUrl.pathname)) ||\n        (reqUrl.origin == lighthouseUrl.origin && reqUrl.pathname.startsWith(lighthouseUrl.pathname)))\n    ){\n      return next.handle(req)\n    }\n\n    // Clone the request and ensure that cookies are sent\n    const authReq = req.clone({withCredentials: true});\n    // catch the error, make specific functions for catching specific errors and you can chain through them with more catch operators\n    return next.handle(authReq).pipe(catchError(x=> this.handleAuthError(x))); //here use an arrow function, otherwise you may get \"Cannot read property 'navigate' of undefined\" on angular 4.4.2/net core 2/webpack 2.70\n  }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {VaultProfile} from '../models/fasten/vaultProfile';\nimport {environment} from '../../environments/environment';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {ResponseWrapper} from '../models/response-wrapper';\nimport {BehaviorSubject} from 'rxjs';\nimport * as jose from 'jose'\nimport {ConfigService} from './config.service';\n\nexport const FASTEN_AUTH_VAULT_COOKIE_NAME = 'fasten_connect_auth_vault'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  FASTEN_CONNECT_JWT_LOCALSTORAGE_KEY = 'fasten_connect_auth_vault';\n\n  public IsAuthenticatedSubject = new BehaviorSubject<boolean>(false)\n\n  constructor(\n    private _httpClient: HttpClient,\n    private configService: ConfigService\n  ) {}\n\n\n\n\n  public async VaultAuthBegin(email: string): Promise<any> {\n    let resp = await this._httpClient.post<ResponseWrapper>(`${environment.connect_api_endpoint_base}/bridge/vault_auth_begin`, {\n      \"email\": email,\n    }, {withCredentials: true, params: {\"public_id\": this.configService.systemConfig$.publicId} }).toPromise()\n    return resp\n  }\n\n  public async VaultAuthFinish(email: string, code: string): Promise<HttpResponse<any>> {\n    let resp = await this._httpClient.post<HttpResponse<any>>(`${environment.connect_api_endpoint_base}/bridge/vault_auth_finish`, {\n      \"email\": email,\n      \"code\": code\n    }, { observe: 'response', withCredentials: true, params: {\"public_id\": this.configService.systemConfig$.publicId} }).toPromise()\n    this.setAuthToken(resp)\n    return resp\n  }\n\n  public async Signout(): Promise<any> {\n    this.publishAuthenticationState(false)\n    //cannot delete cookie because of cross origin policies. all we can do is delete the local token in our widget.\n    return localStorage.removeItem(this.FASTEN_CONNECT_JWT_LOCALSTORAGE_KEY)\n  }\n\n\n  public async GetJWTPayload(): Promise<any> {\n    let authToken = this.GetAuthToken()\n    if (!authToken) {\n      return null\n    }\n    let jwks = jose.createRemoteJWKSet(new URL(environment.jwks_uri))\n    let issuerHost = environment.connect_api_jwt_issuer_host\n\n    try {\n      //audience and issuer must be the same. This token is only valid on the fasten connect api\n      const {payload, protectedHeader} = await jose.jwtVerify(authToken, jwks, {\n        issuer: issuerHost,\n        audience: issuerHost,\n      })\n\n      //TODO: check that the token is not expired\n      // @ts-ignore\n      this.configService.systemConfig = {user: payload}\n      return payload\n    } catch (e) {\n      console.error(\"failed to verify jwt:\", e, issuerHost)\n      return null\n    }\n  }\n\n  public GetAuthToken(): string {\n    return localStorage.getItem(this.FASTEN_CONNECT_JWT_LOCALSTORAGE_KEY);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n  //Private Methods\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n  private setAuthToken(authResp: HttpResponse<any>) {\n    let authHeader = authResp.headers.get(\"authorization\")\n    if (!authHeader) {\n      console.warn(\"no auth header found in response, skipping\")\n      return\n    }\n    let token = authHeader.replace(\"Bearer \", \"\")\n    localStorage.setItem(this.FASTEN_CONNECT_JWT_LOCALSTORAGE_KEY, token)\n    this.publishAuthenticationState(true)\n  }\n\n  private publishAuthenticationState(authenticated: boolean){\n    if(this.IsAuthenticatedSubject.value != authenticated){\n      this.IsAuthenticatedSubject.next(authenticated)\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {VaultSystemConfig, vaultConfigDefaults, VaultSearchConfig, VaultProfileConfig} from '../models/vault-config';\nimport {merge} from 'lodash';\nimport {ApiMode} from '../app.constants';\nimport {VaultProfile} from '../models/fasten/vaultProfile';\nimport {Organization} from '../models/fasten/organization';\nimport {VaultService} from './vault.service';\nimport {\n  LighthouseBrandListDisplayItem, LighthouseEndpointListDisplayItem,\n  LighthousePortalListDisplayItem\n} from '../models/lighthouse/lighthouse-source-search';\nimport {RecordLocatorFacility} from '../models/fasten/record-locator-facility';\nimport {NavOutletRoute} from '../app.routing';\nimport {OrganizationConnectionCallbackEvent} from '../models/organization-connection-callback-event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  //TODO: there should be 3 types of \"config\" settings:\n  // 1. System settings\n  // - apiMode\n  // - organization information\n  // - org credential information\n  // - reconnect id.\n  // 2. VaultProfile/User settings\n  // - user token/cookie data\n  // - vault profile\n  // - current connected patient auth's\n  // - (FUTURE) potential patient auths?\n  // 3. Search settings\n  // - search filters\n  // - selected brand\n  // -\n\n  //public but should only be used in HTML directly. (via `| async`)\n  public systemConfigSubject: BehaviorSubject<VaultSystemConfig>;\n  public vaultProfileConfigSubject: BehaviorSubject<VaultProfileConfig>;\n  public searchConfigSubject: BehaviorSubject<VaultSearchConfig>;\n\n\n  private _defaultSystemConfig: VaultSystemConfig;\n\n  constructor() {\n    this._defaultSystemConfig = vaultConfigDefaults\n    this.systemConfigSubject = new BehaviorSubject(this._defaultSystemConfig);\n    this.vaultProfileConfigSubject = new BehaviorSubject(Object.setPrototypeOf({}, VaultProfileConfig.prototype));\n    this.searchConfigSubject = new BehaviorSubject({} as VaultSearchConfig);\n\n  }\n\n\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Setter & getter for config\n   */\n\n  //Setter\n  set systemConfig(value: Partial<VaultSystemConfig>) {\n    // get the current config, merge the new values, and then submit.\n    const mergedSettings = merge({}, this.systemConfigSubject.getValue(), value);\n\n    // Store the value\n    if(JSON.stringify(mergedSettings) !== JSON.stringify(this.systemConfigSubject.getValue())){\n      console.log('updating system settings:', mergedSettings)\n      this.systemConfigSubject.next(mergedSettings);\n    }\n  }\n\n  //Getter\n  get systemConfig$(): VaultSystemConfig {\n    console.log('getting cached system settings:', this.systemConfigSubject.getValue())\n    return this.systemConfigSubject.getValue()\n  }\n\n  //Setter\n  set vaultProfileConfig(value: Partial<VaultProfileConfig>) {\n    // get the current config, merge the new values, and then submit.\n    const mergedSettings = merge({}, this.vaultProfileConfigSubject.getValue(), value);\n\n    // Store the value\n    if(JSON.stringify(mergedSettings) !== JSON.stringify(this.vaultProfileConfigSubject.getValue())){\n      console.log('updating vault profile settings:', mergedSettings)\n      this.vaultProfileConfigSubject.next(Object.setPrototypeOf(mergedSettings, VaultProfileConfig.prototype));\n    }\n  }\n  //Getter\n  get vaultProfileConfig$(): VaultProfileConfig {\n    console.log('getting vault profile settings:', this.vaultProfileConfigSubject.getValue())\n    return this.vaultProfileConfigSubject.getValue()\n  }\n  vaultProfileAddPendingAccount(brand: LighthouseBrandListDisplayItem, portal: LighthousePortalListDisplayItem, endpoint: LighthouseEndpointListDisplayItem){\n    let updatedVaultProfile = this.vaultProfileConfig$\n    updatedVaultProfile.addPendingAccount(brand, portal, endpoint)\n    this.vaultProfileConfig = updatedVaultProfile\n  }\n  vaultProfileAddConnectedAccount(connectedAccount:  OrganizationConnectionCallbackEvent){\n    if(connectedAccount.error){\n      console.error(\"Error connecting account\", connectedAccount)\n      return\n    }\n    let updatedVaultProfile = this.vaultProfileConfig$\n    updatedVaultProfile.addConnectedAccount(connectedAccount.org_connection_id, connectedAccount.connection_status, connectedAccount.platform_type, connectedAccount.brand_id, connectedAccount.portal_id, connectedAccount.endpoint_id)\n    this.vaultProfileConfig = updatedVaultProfile\n  }\n  vaultProfileAddAvailableRecordLocatorAccount(recordLocatorFacility: RecordLocatorFacility){\n    let updatedVaultProfile = this.vaultProfileConfig$\n    updatedVaultProfile.addAvailableRecordLocatorAccount(recordLocatorFacility)\n    this.vaultProfileConfig = updatedVaultProfile\n  }\n\n  //Setter\n  set searchConfig(value: Partial<VaultSearchConfig>) {\n    // get the current config, merge the new values, and then submit.\n    const mergedSettings = merge({}, this.searchConfigSubject.getValue(), value);\n\n    // Store the value\n    if(JSON.stringify(mergedSettings) !== JSON.stringify(this.searchConfigSubject.getValue())){\n      console.log('updating search settings:', mergedSettings)\n      this.searchConfigSubject.next(mergedSettings);\n    }\n  }\n  //Getter\n  get searchConfig$(): VaultSearchConfig {\n    console.log('getting search settings:', this.searchConfigSubject.getValue())\n    return this.searchConfigSubject.getValue()\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {OrganizationConnectionCallbackEvent} from '../models/organization-connection-callback-event';\nimport {EventPayload} from '../models/event-payload';\nimport {EventTypes} from '../app.constants';\nimport {ConfigService} from './config.service';\nimport {ConnectData} from '../utils/connect-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageBusService {\n\n  //this subject is populated when in popup mode, and a Portal/Endpoint has been selected.\n  // A separate window will be opened, and credentials & metadata from that connection will be passed to this callback fn.\n  // SEE: https://docs.connect.fastenhealth.com/stitch/webcomponent for example data structure.\n  // {\n  //   \"org_connection_id\": \"1234-1234-1234-1234-1234\",\n  //   \"endpoint_id\": \"1234-1234-1234-1234-1234\"\n  // }\n  public messageBusSubject = new BehaviorSubject<EventPayload | null>(null)\n\n  constructor(private configService: ConfigService) { }\n\n  //this event is published when the popup window is opened.\n  public publishOrgConnectionPending(pendingConnectData: ConnectData): void {\n    let eventPayload = new EventPayload()\n    eventPayload.api_mode = this.configService.systemConfig$.apiMode\n    eventPayload.data = pendingConnectData\n    eventPayload.event_type = EventTypes.EventTypeConnectionPending\n    this.messageBusSubject.next(eventPayload)\n  }\n  //this event is published when the popup window is closed, and the connection is successful or failed.\n  public publishOrgConnectionComplete(orgConnectionCallbackData: OrganizationConnectionCallbackEvent): void {\n\n    //determine if the connection was successful or failed, and update the UI accordingly.\n    let eventPayload = new EventPayload()\n    eventPayload.api_mode = this.configService.systemConfig$.apiMode\n    eventPayload.data = orgConnectionCallbackData\n    if (orgConnectionCallbackData.error) {\n      eventPayload.event_type = EventTypes.EventTypeConnectionFailed\n    } else {\n      eventPayload.event_type = EventTypes.EventTypeConnectionSuccess\n    }\n    this.messageBusSubject.next(eventPayload)\n  }\n\n\n  //this event is published when the widget is closed. It will publish a list of all\n  public publishComplete(): void {\n    let eventPayload = new EventPayload()\n    eventPayload.api_mode = this.configService.systemConfig$.apiMode\n    eventPayload.data = this.configService.vaultProfileConfig$.connectedPatientAccounts.map((account) => {\n      return {\n        org_connection_id: account.org_connection_id,\n        platform_type: account.platform_type,\n        brand_id: account.brand?.id,\n        portal_id: account.portal?.id,\n        endpoint_id: account.endpoint?.id\n      }\n    })\n    eventPayload.event_type = EventTypes.EventTypeWidgetComplete\n    this.messageBusSubject.next(eventPayload)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ResponseWrapper } from '../models/response-wrapper';\nimport { environment } from '../../environments/environment';\nimport { Organization } from '../models/fasten/organization';\nimport { ApiMode } from '../app.constants';\nimport { OrganizationCredential } from '../models/fasten/organization-credential';\nimport { VaultProfile } from \"../models/fasten/vaultProfile\";\nimport {catchError, concatMap, filter, first, fromEvent, map, Observable, of, throwError, timeout} from 'rxjs';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport {SearchFilter} from '../models/search-filter';\nimport {LighthouseSourceSearch} from '../models/lighthouse/lighthouse-source-search';\nimport {FormHealthSystemRequest} from '../models/forms/form-health-system-request';\nimport {FormSupportRequest} from '../models/forms/form-support-request';\nimport {RecordLocatorFacility} from '../models/fasten/record-locator-facility';\nimport {OrganizationConnectionCallbackEvent} from '../models/organization-connection-callback-event';\nimport {ConfigService} from './config.service';\nimport {VaultSystemConfig} from '../models/vault-config';\nimport {OrganizationConnection} from '../models/fasten/organization-connection';\n\nexport const ConnectWindowTimeout = 20*60*1000 //wait 20 minutes (in milliseconds)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VaultService {\n\n  constructor(\n    private _httpClient: HttpClient,\n    private deviceService: DeviceDetectorService,\n    public configService: ConfigService,\n  ) {\n\n    //always watch for changes to the vault\n    this.configService.systemConfigSubject.subscribe((systemConfig: VaultSystemConfig) => {\n      console.log(\"System configuration changed:\", systemConfig, this.configService.systemConfig$)\n      if(systemConfig.org_id && !systemConfig.org){\n        console.log(\"attempt to download org information, and store in config\")\n        this.getOrg(systemConfig.org_id).subscribe((org: Organization )=>{\n          console.log(\"org:\", org)\n          this.configService.systemConfig = {org: org}\n        })\n      }\n    });\n  }\n\n\n  //This function must be \".subscribed()\" to work. If not, the handler will not be registered and messages will be ignored.\n  private waitForOrgConnectionOrTimeout(openedWindow: Window): Observable<any> {\n    console.log(`waiting for postMessage notification from popup window`)\n\n    //TODO: this function should also wait for the close event from the window and throw an error if the window is closed.\n    // see: https://stackoverflow.com/questions/5712195/how-to-listen-for-child-window-closing\n\n    //new code to listen to post message\n    return fromEvent(window, 'message')\n      .pipe(\n        //throw an error if we wait more than 2 minutes (this will close the window)\n        timeout(ConnectWindowTimeout) as any,\n        //make sure we're only listening to events from the \"opened\" window.\n        filter((event: MessageEvent) => event.source == openedWindow),\n        //after filtering, we should only have one event to handle.\n        first(),\n        map((event: any) => {\n          console.log(`received postMessage notification from popup window & sending acknowledgment`)\n          // @ts-ignore\n          event.source.postMessage(JSON.stringify({close:true}), event.origin);\n          console.log(\"postmessage data\", event.data)\n          return JSON.parse(event.data)\n        }),\n        catchError((err) => {\n          console.warn(`timed out waiting for notification from popup (${ConnectWindowTimeout/1000}s), closing window`)\n          openedWindow.self.close()\n          return throwError(err)\n        })\n      )\n  }\n\n  public getRecordLocatorFacilities(): Observable<RecordLocatorFacility[]> {\n    return this._httpClient.get<ResponseWrapper>(`${environment.connect_api_endpoint_base}/bridge/record_locator`,\n      {params: {\"public_id\": this.configService.systemConfig$.publicId }})\n      .pipe(\n        map((response: ResponseWrapper) => {\n          console.log(\"Record Locator Response\", response)\n          return response.data as RecordLocatorFacility[];\n        })\n      );\n  }\n\n  public searchCatalogBrands(apiMode: ApiMode, filter: SearchFilter): Observable<LighthouseSourceSearch> {\n    if((typeof filter.searchAfter === 'string' || filter.searchAfter instanceof String) && (filter.searchAfter as string).length > 0){\n      filter.searchAfter = (filter.searchAfter as string).split(',')\n    } else {\n      filter.searchAfter = []\n    }\n    const endpointUrl = new URL(`${environment.connect_api_endpoint_base}/bridge/catalog/search`);\n\n    return this._httpClient.post<ResponseWrapper>(endpointUrl.toString(), filter, {params: {\n        \"public_id\": this.configService.systemConfig$.publicId,\n        'api_mode': apiMode\n      }})\n      .pipe(\n        map((response: ResponseWrapper) => {\n          console.log(\"Metadata RESPONSE\", response)\n          return response.data as LighthouseSourceSearch\n        })\n      );\n  }\n\n  public getOrg(orgId: String): Observable<Organization> {\n    return this._httpClient.get<ResponseWrapper>(`${environment.connect_api_endpoint_base}/org/${orgId}`,\n      {params: {\n        \"public_id\": this.configService.systemConfig$.publicId,\n      }})\n      .pipe(\n        map((response: ResponseWrapper) => {\n          console.log(\"Organization\", response)\n          return response.data as Organization;\n        })\n      );\n  }\n\n  public getOrgByPublicId(publicId: String): Observable<Organization> {\n    let queryParams = {}\n    queryParams['public_id'] = publicId\n\n    return this._httpClient.get<ResponseWrapper>(\n      `${environment.connect_api_endpoint_base}/bridge/org`, {params: queryParams})\n      .pipe(\n        map((response: ResponseWrapper) => {\n          console.log(\"Organization\", response)\n          return response.data as Organization;\n        })\n      );\n  }\n\n  public getOrgConnectionById(publicId: String, orgConnectionId: String): Observable<OrganizationConnection> {\n    let queryParams = {}\n    queryParams['public_id'] = publicId\n    return this._httpClient.get<ResponseWrapper>(\n      `${environment.connect_api_endpoint_base}/bridge/org_connection/${orgConnectionId}`, {params: queryParams})\n      .pipe(\n        map((response: ResponseWrapper) => {\n          console.log(\"Organization Connection Data\", response)\n          return response.data as OrganizationConnection;\n        })\n      );\n  }\n\n  requestHealthSystem(requestHealth: FormHealthSystemRequest): Observable<any> {\n    const endpointUrl = new URL(`${environment.connect_api_endpoint_base}/support/healthsystem`);\n\n    return this._httpClient.post<any>(endpointUrl.toString(), requestHealth)\n      .pipe(\n        map((response: ResponseWrapper) => {\n          // @ts-ignore\n          return {}\n        })\n      );\n  }\n\n  requestSupport(request: FormSupportRequest): Observable<any> {\n    const endpointUrl = new URL(`${environment.connect_api_endpoint_base}/support/request`);\n\n    return this._httpClient.post<any>(endpointUrl.toString(), request)\n      .pipe(\n        map((response: ResponseWrapper) => {\n          // @ts-ignore\n          return {}\n        })\n      );\n  }\n\n\n  // public verificationWithPopup(publicId: string, brandId: string, portalId: string, endpointId: string, reconnectOrgConnectionId?: string, connectMode?: ConnectMode, externalId?: string, externalState?: string): Observable<OrganizationConnectionCallbackEvent> {\n  public verificationWithPopup(): Observable<any> {\n    //todo, this should use a bridge/connect or vault endpoint\n\n    const redirectUrl = new URL(`${environment.connect_api_endpoint_base}/bridge/identity_verification/connect`);\n    redirectUrl.searchParams.set(\"public_id\", this.configService.systemConfig$.publicId);\n\n    const isDesktop = this.deviceService.isDesktop();\n    let features = \"\"\n    if(isDesktop){\n      //add optons for window.open, popup only for desktop (mobile and table will open a new tab)\n      features = \"popup=true,width=700,height=600\"\n    }\n\n    //open a external url in a new window\n    let openedWindow = window.open(redirectUrl.toString(), \"_blank\", features);\n\n    return this.waitForOrgConnectionOrTimeout(openedWindow!)\n  }\n\n  public accountConnectWithPopup(brandId: string, portalId: string, endpointId: string, reconnectOrgConnectionId?: string, externalId?: string, externalState?: string): Observable<OrganizationConnectionCallbackEvent> {\n    const redirectUrlParts = new URL(`${environment.connect_api_endpoint_base}/bridge/connect`);\n    const redirectParams = new URLSearchParams()\n    redirectParams.set(\"public_id\", this.configService.systemConfig$.publicId)\n    redirectParams.set(\"brand_id\", brandId)\n    redirectParams.set(\"portal_id\", portalId)\n    redirectParams.set(\"endpoint_id\", endpointId)\n    redirectParams.set(\"connect_mode\", \"popup\")\n    if (reconnectOrgConnectionId) {\n      redirectParams.set(\"reconnect_org_connection_id\", reconnectOrgConnectionId)\n    }\n    if (externalId) {\n      redirectParams.set(\"external_id\", externalId)\n    }\n    if (externalState) {\n      redirectParams.set(\"external_state\", externalState)\n    }\n\n    redirectUrlParts.search = redirectParams.toString()\n    console.log(redirectUrlParts.toString());\n\n\n    const isDesktop = this.deviceService.isDesktop();\n    let features = \"\"\n    if(isDesktop){\n      //add optons for window.open, popup only for desktop (mobile and table will open a new tab)\n      features = \"popup=true,width=700,height=600\"\n    }\n\n    //We're always in popup mode, we can open a new window, rather than redirecting the current window (which is an app frame)\n    //open a external url in a new window\n    let openedWindow = window.open(redirectUrlParts.toString(), \"_blank\", features);\n    return this.waitForOrgConnectionOrTimeout(openedWindow!)\n  }\n\n\n  //OLD code\n\n\n  public updateUser(oldPass: string, oldEmail: string, newEmail: string, newPass: string = \"\"): Observable<VaultProfile> {\n    const userUpdateJson = JSON.stringify({\n      email: oldEmail,\n      password: oldPass,\n      newEmail: newEmail,\n      newPassword: newPass\n    });\n    return this._httpClient.put<ResponseWrapper>(`${environment.connect_api_endpoint_base}/user`, userUpdateJson)\n      .pipe(\n        map((response: ResponseWrapper) => {\n          console.log(\"Updated User\", response)\n\n          return response.data as VaultProfile;\n        })\n      );\n  }\n\n  /**\n   * Create a new organization and associate it with the current User\n   * @param newOrg\n   * @param logoBlob\n   * @constructor\n   */\n  public createOrg(newOrg: Organization, logoBlob: Blob): Observable<ResponseWrapper> {\n    const formData = new FormData();\n\n    //add the org data to the form data\n    const orgJson = JSON.stringify(newOrg);\n    const orgJsonBlob = new Blob([orgJson], {\n      type: 'application/json'\n    });\n    formData.append(\"org\", orgJsonBlob);\n    formData.append(\"logo\", logoBlob);\n\n    let resp = this._httpClient.post<ResponseWrapper>(`${environment.connect_api_endpoint_base}/org`, formData)\n    console.log(resp)\n    return resp\n  }\n\n\n  public updateOrg(orgId: string, updateOrg: Organization, logoBlob?: Blob | null): Observable<Organization> {\n    const formData = new FormData();\n\n    //add the org data to the form data\n    const orgJson = JSON.stringify(updateOrg);\n    const orgJsonBlob = new Blob([orgJson], {\n      type: 'application/json'\n    });\n    formData.append(\"org\", orgJsonBlob);\n    if (logoBlob) {\n      formData.append(\"logo\", logoBlob);\n    }\n    return this._httpClient.put<ResponseWrapper>(`${environment.connect_api_endpoint_base}/org/${orgId}`, formData)\n      .pipe(\n        map((response: ResponseWrapper) => {\n          console.log(\"Updated Organization\", response)\n          return response.data as Organization;\n        })\n      );\n  }\n\n  public sendOrgInvite(orgId: string, recipientEmail: string): Observable<ResponseWrapper> {\n    return this._httpClient.post<ResponseWrapper>(`${environment.connect_api_endpoint_base}/org/${orgId}/invite`, {\n      recipient_email_address: recipientEmail,\n      org_id: orgId\n    })\n  }\n\n  // public createOrgCredentials(orgId: string, apiMode: ApiMode, redirectUrl: string, note: string): Observable<{ action: CRUDMode, org_credential: OrganizationCredential, private_key: string }> {\n  //   return this._httpClient.post<ResponseWrapper>(`${environment.connect_api_endpoint_base}/org/${orgId}/credentials`, {\n  //     api_mode: apiMode,\n  //     redirect_uri: redirectUrl,\n  //     note: note\n  //   })\n  //     .pipe(\n  //       map((response: ResponseWrapper) => {\n  //         console.log(\"Organization Credential\", response)\n  //         response.data.action = CRUDMode.Create\n  //         return response.data as { action: CRUDMode, org_credential: OrganizationCredential, private_key: string };\n  //       })\n  //     );\n  // }\n\n  public getOrgCredentials(orgId: string): Observable<OrganizationCredential[]> {\n    return this._httpClient.get<ResponseWrapper>(`${environment.connect_api_endpoint_base}/org/${orgId}/credentials`)\n      .pipe(\n        map((response: ResponseWrapper) => {\n          console.log(\"Organization Credentials\", response)\n          return response.data as OrganizationCredential[];\n        })\n      );\n  }\n\n\n\n\n\n\n\n\n\n}\n","import {Observable} from 'rxjs';\nimport {VaultService} from '../services/vault.service';\nimport {Router} from '@angular/router';\nimport {NavOutletService} from '../router/nav-outlet/nav-outlet.service';\nimport {NavOutletPageName} from '../app.routing';\nimport {inject} from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {MessageBusService} from '../services/message-bus.service';\nimport {ConfigService} from '../services/config.service';\nimport {v4 as uuidv4} from 'uuid';\n\n//TODO: move this to its own class. Naming should be consistent with CallbakeEventData.\nexport interface ConnectData {\n  public_id: string;\n  brand_id: string;\n  portal_id: string;\n  endpoint_id: string;\n\n\n  //only populated when reconnect_org_connection is present\n  org_connection_id?: string;\n  external_id?: string\n  external_state?: string\n}\n\nexport function ConnectHelper(connectData: ConnectData): void {\n  const vaultApi = inject(VaultService) as VaultService;\n  const configService = inject(ConfigService) as ConfigService;\n  const navOutletService = inject(NavOutletService) as NavOutletService;\n  const messageBusService = inject(MessageBusService) as MessageBusService;\n\n  if (!connectData.external_state) {\n    connectData.external_state = uuidv4();\n  }\n  //publish the pending connection event\n  messageBusService.publishOrgConnectionPending(connectData)\n\n  vaultApi.accountConnectWithPopup(connectData.brand_id, connectData.portal_id, connectData.endpoint_id, connectData.org_connection_id, connectData.external_id, connectData.external_state).subscribe((orgConnectionCallbackData) => {\n    console.log(orgConnectionCallbackData)\n\n    if(!orgConnectionCallbackData){\n      return //wait for redirect\n    }\n\n    //Note: this code will only run when this.connectMode == popup\n    //when connectMode == 'redirect', the user is redirected in the same window, and this code is never executed.\n\n    messageBusService.publishOrgConnectionComplete(orgConnectionCallbackData)\n\n    configService.vaultProfileAddConnectedAccount(orgConnectionCallbackData)\n\n    // redirect the browser back to the search page (TODO: this should show the support request page if an error occurred)\n    navOutletService.navigateByUrl(NavOutletPageName.Dashboard);\n  })\n}\n","export const environment = {\n  name: \"development\",\n\n  //specify the lighthouse base that we're going to use to authenticate against all our source/providers. Must not have trailing slash\n  lighthouse_api_endpoint_base: 'https://lighthouse.fastenhealth.com',\n\n  //used to specify the api server that we're going to use (can be relative or absolute). Must not have trailing slash\n  // connect_api_endpoint_base: 'https://api.connect-dev.fastenhealth.com/v1',\n  // if relative, must start with /\n  connect_api_endpoint_base: 'https://api.connect-dev.fastenhealth.com/v1',\n  connect_api_jwt_issuer_host: 'https://api.connect-dev.fastenhealth.com/v1',\n\n  //JWKS for JWT verification\n  jwks_uri: 'https://cdn.fastenhealth.com/jwks/fasten-connect/dev.json',\n\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.name == \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["EventEmitter","ApiMode","ElementRef","NavOutletPageName","i0","SourceListItem","FastenStitchComponent","constructor","host","configService","vaultService","navOutletService","messageBus","nativeElement","show","showStitchModalExt","bind","hide","hideStitchModalExt","ngAfterViewInit","ngOnChanges","changes","Object","keys","forEach","key","index","currentValue","previousValue","systemUpdates","console","log","apiMode","getApiModeFromPublicId","systemConfig","ngOnInit","publicId","externalId","reconnectOrgConnectionId","staticBackdrop","anonymousVaultProfile","messageBusSubject","subscribe","eventPayload","messageBusCallback","emit","publicIdParts","split","Test","length","Live","error","errorMessage","org","getOrgByPublicId","err","showStitchModal","navigateByUrl","Default","getOrgConnectionById","orgConnection","HealthSystemConnecting","Map","catalog_brand_id","catalog_portal_id","catalog_endpoint_id","org_connection_id","stitchModal","showModal","registerDialogCloseOnBackdropClick","HealthSystemSearch","close","addEventListener","event","systemConfig$","rect","getBoundingClientRect","isInDialog","top","clientY","height","left","clientX","width","selectors","viewQuery","ctx","_r6","ChangeDetectorRef","CompleteComponent","changeRef","markForCheck","decls","vars","consts","template","DashboardComponent","connectAccount","pendingAccount","brand","id","portal","endpoint","completeAccounts","publishComplete","CompleteSummary","EnvironmentInjector","ConnectHelper","HealthSystemConnectingComponent","injector","runInContext","public_id","brand_id","brandId","portal_id","portalId","endpoint_id","endpointId","orgConnectionId","external_id","external_state","externalState","cancelAccountConnect","Dashboard","inputs","map","takeWhile","timer","VaultProfileSigninCodeComponent","authService","pipe","n","codeExpirySeconds","onCodeCompleted","code","loading","currentEmail","VaultAuthFinish","then","catch","name","errorMsg","VaultProfile","VaultProfileSigninComponent","urlParams","URLSearchParams","window","location","search","setMessage","get","signinSubmit","submitted","existingVaultProfile","email","VaultAuthBegin","VaultProfileSigninCode","action","showMessage","message","environment","BehaviorSubject","jose","FASTEN_AUTH_VAULT_COOKIE_NAME","AuthService","_httpClient","resp","post","connect_api_endpoint_base","withCredentials","params","toPromise","observe","setAuthToken","Signout","publishAuthenticationState","localStorage","removeItem","FASTEN_CONNECT_JWT_LOCALSTORAGE_KEY","GetJWTPayload","authToken","GetAuthToken","jwks","createRemoteJWKSet","URL","jwks_uri","issuerHost","connect_api_jwt_issuer_host","payload","protectedHeader","jwtVerify","issuer","audience","user","e","getItem","authResp","authHeader","headers","warn","token","replace","setItem","authenticated","IsAuthenticatedSubject","value","next","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}